{"ast":null,"code":"import axios from 'axios';\nimport shortid from 'shortid';\nexport const categories = [{\n  title: 'Новости и политика',\n  id: shortid.generate()\n}, {\n  title: 'Транспорт',\n  id: shortid.generate()\n}, {\n  title: 'Мода и красота',\n  id: shortid.generate()\n}, {\n  title: 'Юмор',\n  id: shortid.generate()\n}, {\n  title: 'Образование',\n  id: shortid.generate()\n}, {\n  title: 'Развлечения',\n  id: shortid.generate()\n}, {\n  title: 'Для всей семьи',\n  id: shortid.generate()\n}, {\n  title: 'Кино и анимация',\n  id: shortid.generate()\n}, {\n  title: 'Кулинария',\n  id: shortid.generate()\n}, {\n  title: 'Игры',\n  id: shortid.generate()\n}, {\n  title: 'Хобби и стиль',\n  id: shortid.generate()\n}, {\n  title: 'Музыка',\n  id: shortid.generate()\n}, {\n  title: 'Общественная деятельность',\n  id: shortid.generate()\n}, {\n  title: 'Люди и блоги',\n  id: shortid.generate()\n}, {\n  title: 'Животные',\n  id: shortid.generate()\n}, {\n  title: 'Наука и техника',\n  id: shortid.generate()\n}, {\n  title: 'Спорт',\n  id: shortid.generate()\n}, {\n  title: 'Путешествия',\n  id: shortid.generate()\n}];\nconst baseURL = ''; // expect const getCategories\n\nexport const getCategories = () => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      let response = await axios.get(`${baseURL}/api/categories`, {\n        headers: new Headers({\n          'Content-Type': 'application/json'\n        })\n      });\n      resolve(response); // localStorage.setItem('token', response.data.token);\n      // localStorage.setItem('user', response.config.data);\n    } catch (err) {\n      reject(err);\n    }\n  });\n};","map":{"version":3,"sources":["/Users/oksanashukh/Desktop/INFOCOIN/infoCoin-frontend/src/components/Categories/categories-api.js"],"names":["axios","shortid","categories","title","id","generate","baseURL","getCategories","Promise","resolve","reject","response","get","headers","Headers","err"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport shortid from 'shortid';\n\nexport const categories = [\n  { title: 'Новости и политика', id: shortid.generate() },\n  { title: 'Транспорт', id: shortid.generate() },\n  { title: 'Мода и красота', id: shortid.generate() },\n  { title: 'Юмор', id: shortid.generate() },\n  { title: 'Образование', id: shortid.generate() },\n  { title: 'Развлечения', id: shortid.generate() },\n  { title: 'Для всей семьи', id: shortid.generate() },\n  { title: 'Кино и анимация', id: shortid.generate() },\n  { title: 'Кулинария', id: shortid.generate() },\n  { title: 'Игры', id: shortid.generate() },\n  { title: 'Хобби и стиль', id: shortid.generate() },\n  { title: 'Музыка', id: shortid.generate() },\n  { title: 'Общественная деятельность', id: shortid.generate() },\n  { title: 'Люди и блоги', id: shortid.generate() },\n  { title: 'Животные', id: shortid.generate() },\n  { title: 'Наука и техника', id: shortid.generate() },\n  { title: 'Спорт', id: shortid.generate() },\n  { title: 'Путешествия', id: shortid.generate() },\n];\n\nconst baseURL = '';\n// expect const getCategories\nexport const getCategories = () => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      let response = await axios.get(\n        `${baseURL}/api/categories`,\n\n        { headers: new Headers({ 'Content-Type': 'application/json' }) },\n      );\n\n      resolve(response);\n      // localStorage.setItem('token', response.data.token);\n      // localStorage.setItem('user', response.config.data);\n    } catch (err) {\n      reject(err);\n    }\n  });\n};\n"]},"metadata":{},"sourceType":"module"}