{"ast":null,"code":"var _jsxFileName = \"/Users/oksanashukh/Desktop/INFOCOIN/app/src/pages/RegisterPage/index.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react/jsx-no-target-blank */\nimport React, { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Button } from \"@material-ui/core\";\nimport { authSignUp, authPending } from \"@redux/actions/auth\";\nimport Input from \"@components/Form/Input\";\nimport SignupSchema from \"@helpers/Formik/validation\";\nimport Formik from \"@helpers/Formik\";\nimport { Field } from \"formik\";\nimport PrivacyPopup from \"@containers/PrivacyPopup/PrivacyPopup\";\nimport { registerRequest } from \"@services/api/auth\";\nimport css from \"@styles/containers/Auth.module.scss\";\nimport { useTranslation } from \"react-i18next\";\nimport { addNotification } from \"@redux/actions/notifications\";\nimport cx from \"classnames\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegisterPage = ({\n  isLoadingAuth,\n  registerAction,\n  pendingAction,\n  addNotificationAction\n}) => {\n  _s();\n\n  const [isPrivacyOpened, setPrivacyOpened] = useState(false);\n  let history = useHistory();\n  const {\n    t\n  } = useTranslation();\n\n  const handleSubmit2 = data => {\n    return registerRequest(data).then(() => history.push(\"/verify\")).then(() => {\n      console.log('registered');\n    });\n  };\n\n  const [checkboxValue, setCheckboxValue] = useState(false);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [isPrivacyOpened && /*#__PURE__*/_jsxDEV(PrivacyPopup, {\n      togglePrivacyPolicy: () => setPrivacyOpened(p => !p)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: css.auth__content,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: css.auth__mainBox,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: css.auth__title,\n          children: t(\"registration\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: `${css.auth__subtitle} ${css.sign_up}`,\n          children: [t(\"registerd\"), \" \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/login\",\n            children: t(\"login\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 42\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            email: \"\",\n            password: \"\",\n            confirmPassword: \"\",\n            firstName: \"\",\n            lastName: \"\",\n            phone: \"\"\n          },\n          validationSchema: SignupSchema,\n          onSubmit: (values, actions) => {\n            handleSubmit2(values).catch(error => {\n              console.log(JSON.stringify(error));\n              actions.setErrors({\n                email: \" \",\n                password: \" \",\n                confirmPassword: \" \",\n                firstName: \" \",\n                lastName: \" \",\n                phone: \" \"\n              });\n\n              if (error === null || error === void 0 ? void 0 : error.notification) {\n                addNotificationAction({\n                  type: \"error\",\n                  text: error.message\n                });\n                return;\n              }\n\n              console.log(error);\n            });\n          },\n          children: ({\n            setFieldTouched,\n            values,\n            errors,\n            touched,\n            handleChange,\n            handleSubmit,\n            isSubmitting\n          }) => /*#__PURE__*/_jsxDEV(\"form\", {\n            className: css.auth__form,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: css.flexBetween,\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                className: cx([css.auth__form_registerInput]),\n                label: t(\"firstName\"),\n                variant: \"outlined\",\n                type: \"firstName\",\n                name: \"firstName\",\n                error: errors.firstName && touched.firstName,\n                errorText: touched.firstName && errors.firstName,\n                onBlur: () => setFieldTouched(\"firstName\", true, false),\n                value: values.firstName,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                className: cx([css.auth__form_registerInput, css.auth__form_input_leftP, css.auth__form_paddRight]),\n                label: t(\"lastName\"),\n                variant: \"outlined\",\n                type: \"lastName\",\n                name: \"lastName\",\n                error: errors.lastName && touched.lastName,\n                errorText: touched.lastName && errors.lastName,\n                onBlur: () => setFieldTouched(\"lastName\", true, false),\n                value: values.lastName,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: css.flexBetween,\n              children: [/*#__PURE__*/_jsxDEV(Input // style={{ marginRight: \"20px\" }}\n              , {\n                className: cx([css.auth__form_registerInput]),\n                label: t(\"email\"),\n                variant: \"outlined\",\n                type: \"email\",\n                name: \"email\",\n                error: errors.email && touched.email,\n                errorText: touched.email && errors.email,\n                onBlur: () => setFieldTouched(\"email\", true, false),\n                value: values.email,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                className: cx([css.auth__form_registerInput, css.auth__form_input_leftP // css.auth__form_paddRight\n                ]),\n                label: t(\"phone\"),\n                variant: \"outlined\",\n                type: \"phone\",\n                name: \"phone\",\n                error: errors.phone && touched.phone,\n                errorText: touched.phone && errors.phone,\n                onBlur: () => setFieldTouched(\"phone\", true, false),\n                value: values.phone,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: css.flexBetween,\n              children: [/*#__PURE__*/_jsxDEV(Input // style={{ marginRight: \"20px\" }}\n              , {\n                className: css.auth__form_registerInput,\n                label: t(\"password\"),\n                variant: \"outlined\",\n                type: \"password\",\n                name: \"password\",\n                error: errors.password && touched.password,\n                errorText: touched.password && errors.password,\n                onBlur: () => setFieldTouched(\"password\", true, false),\n                value: values.password,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                className: cx([css.auth__form_registerInput, css.auth__form_input_leftP, css.auth__form_paddRight]),\n                label: t(\"password_confirm\"),\n                variant: \"outlined\",\n                type: \"password\",\n                name: \"confirmPassword\",\n                error: errors.confirmPassword && touched.confirmPassword,\n                errorText: touched.confirmPassword && errors.confirmPassword,\n                onBlur: () => setFieldTouched(\"confirmPassword\", true, false),\n                value: values.confirmPassword,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group form-check\",\n              style: {\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Field, {\n                type: \"checkbox\",\n                name: \"acceptTerms\",\n                style: {\n                  marginRight: \"10px\"\n                } // error={errors.acceptTerms && touched.acceptTerms}\n                // errorText={touched.acceptTerms && errors.acceptTerms}\n                ,\n                error: errors.acceptTerms && touched.acceptTerms,\n                errorText: touched.acceptTerms && errors.acceptTerms // checked={checkboxValue}\n                // onChange={() => console.log(setCheckboxValue(!checkboxValue))}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: css.auth__policy,\n                children: [t(\"privacy_first\"), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 62\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: css.auth__privicyLink,\n                  onClick: () => setPrivacyOpened(true),\n                  children: t(\"privacy_second\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              color: \"primary\",\n              variant: \"contained\",\n              className: css.auth__button // disabled={isSubmitting || isLoadingAuth}\n              ,\n              onClick: handleSubmit,\n              children: t(\"register\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RegisterPage, \"AXlSRrrlaS+LDHoTc/xtW8muBNQ=\", false, function () {\n  return [useHistory, useTranslation];\n});\n\n_c = RegisterPage;\nexport default RegisterPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"sources":["/Users/oksanashukh/Desktop/INFOCOIN/app/src/pages/RegisterPage/index.js"],"names":["React","useState","Link","useHistory","connect","Button","authSignUp","authPending","Input","SignupSchema","Formik","Field","PrivacyPopup","registerRequest","css","useTranslation","addNotification","cx","RegisterPage","isLoadingAuth","registerAction","pendingAction","addNotificationAction","isPrivacyOpened","setPrivacyOpened","history","t","handleSubmit2","data","then","push","console","log","checkboxValue","setCheckboxValue","p","auth__content","auth__mainBox","auth__title","auth__subtitle","sign_up","email","password","confirmPassword","firstName","lastName","phone","values","actions","catch","error","JSON","stringify","setErrors","notification","type","text","message","setFieldTouched","errors","touched","handleChange","handleSubmit","isSubmitting","auth__form","flexBetween","auth__form_registerInput","auth__form_input_leftP","auth__form_paddRight","display","justifyContent","alignItems","marginRight","acceptTerms","auth__policy","auth__privicyLink","auth__button"],"mappings":"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","sourcesContent":["/* eslint-disable react/jsx-no-target-blank */\nimport React, {useState} from \"react\";\nimport {Link, useHistory} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {Button} from \"@material-ui/core\";\nimport {authSignUp, authPending} from \"@redux/actions/auth\";\nimport Input from \"@components/Form/Input\";\nimport SignupSchema from \"@helpers/Formik/validation\";\nimport Formik from \"@helpers/Formik\";\nimport {Field} from \"formik\";\nimport PrivacyPopup from \"@containers/PrivacyPopup/PrivacyPopup\";\nimport {registerRequest} from \"@services/api/auth\";\nimport css from \"@styles/containers/Auth.module.scss\";\nimport {useTranslation} from \"react-i18next\";\nimport {addNotification} from \"@redux/actions/notifications\";\nimport cx from \"classnames\";\n\nconst RegisterPage = ({\n                              isLoadingAuth,\n                              registerAction,\n                              pendingAction,\n                              addNotificationAction,\n                          }) => {\n    const [isPrivacyOpened, setPrivacyOpened] = useState(false);\n    let history = useHistory();\n    const {t} = useTranslation();\n\n    const handleSubmit2 = (data) => {\n        return registerRequest(data)\n            .then(() => history.push(\"/verify\"))\n            .then(() => {\n                console.log('registered')\n            });\n    };\n\n    const [checkboxValue, setCheckboxValue] = useState(false);\n\n    return (\n        <React.Fragment>\n            {isPrivacyOpened && (\n                <PrivacyPopup togglePrivacyPolicy={() => setPrivacyOpened((p) => !p)}/>\n            )}\n            <div className={css.auth__content}>\n                <div className={css.auth__mainBox}>\n                    <h2 className={css.auth__title}>{t(\"registration\")}</h2>\n                    <h3 className={`${css.auth__subtitle} ${css.sign_up}`}>\n                        {t(\"registerd\")} <Link to=\"/login\">{t(\"login\")}</Link>\n                    </h3>\n                    <Formik\n                        initialValues={{\n                            email: \"\",\n                            password: \"\",\n                            confirmPassword: \"\",\n                            firstName: \"\",\n                            lastName: \"\",\n                            phone: \"\",\n\n                        }}\n                        validationSchema={SignupSchema}\n                        onSubmit={(values, actions) => {\n                            handleSubmit2(values).catch((error) => {\n                                console.log(JSON.stringify(error));\n                                actions.setErrors({\n                                    email: \" \",\n                                    password: \" \",\n                                    confirmPassword: \" \",\n                                    firstName: \" \",\n                                    lastName: \" \",\n                                    phone: \" \",\n                                });\n                                if (error?.notification) {\n                                    addNotificationAction({type: \"error\", text: error.message});\n                                    return\n                                }\n                                console.log(error)\n                            });\n                        }}\n                    >\n                        {({\n                              setFieldTouched,\n                              values,\n                              errors,\n                              touched,\n                              handleChange,\n                              handleSubmit,\n                              isSubmitting,\n                          }) => (\n                            <form className={css.auth__form}>\n                                <div className={css.flexBetween}>\n                                    <Input\n\n                                        className={cx([css.auth__form_registerInput])}\n                                        label={t(\"firstName\")}\n                                        variant=\"outlined\"\n                                        type=\"firstName\"\n                                        name=\"firstName\"\n                                        error={errors.firstName && touched.firstName}\n                                        errorText={touched.firstName && errors.firstName}\n                                        onBlur={() => setFieldTouched(\"firstName\", true, false)}\n                                        value={values.firstName}\n                                        onChange={handleChange}\n                                    />\n\n                                    <Input\n                                        className={cx([\n                                            css.auth__form_registerInput,\n                                            css.auth__form_input_leftP,\n                                            css.auth__form_paddRight,\n                                        ])}\n                                        label={t(\"lastName\")}\n                                        variant=\"outlined\"\n                                        type=\"lastName\"\n                                        name=\"lastName\"\n                                        error={errors.lastName && touched.lastName}\n                                        errorText={touched.lastName && errors.lastName}\n                                        onBlur={() => setFieldTouched(\"lastName\", true, false)}\n                                        value={values.lastName}\n                                        onChange={handleChange}\n                                    />\n                                </div>\n                                <div className={css.flexBetween}>\n                                    <Input\n                                        // style={{ marginRight: \"20px\" }}\n                                        className={cx([css.auth__form_registerInput])}\n                                        label={t(\"email\")}\n                                        variant=\"outlined\"\n                                        type=\"email\"\n                                        name=\"email\"\n                                        error={errors.email && touched.email}\n                                        errorText={touched.email && errors.email}\n                                        onBlur={() => setFieldTouched(\"email\", true, false)}\n                                        value={values.email}\n                                        onChange={handleChange}\n                                    />\n                                    <Input\n                                        className={cx([\n                                            css.auth__form_registerInput,\n                                            css.auth__form_input_leftP,\n                                            // css.auth__form_paddRight\n                                        ])}\n                                        label={t(\"phone\")}\n                                        variant=\"outlined\"\n                                        type=\"phone\"\n                                        name=\"phone\"\n                                        error={errors.phone && touched.phone}\n                                        errorText={touched.phone && errors.phone}\n                                        onBlur={() => setFieldTouched(\"phone\", true, false)}\n                                        value={values.phone}\n                                        onChange={handleChange}\n                                    />\n                                </div>\n                                <div className={css.flexBetween}>\n                                    <Input\n                                        // style={{ marginRight: \"20px\" }}\n                                        className={css.auth__form_registerInput}\n                                        label={t(\"password\")}\n                                        variant=\"outlined\"\n                                        type=\"password\"\n                                        name=\"password\"\n                                        error={errors.password && touched.password}\n                                        errorText={touched.password && errors.password}\n                                        onBlur={() => setFieldTouched(\"password\", true, false)}\n                                        value={values.password}\n                                        onChange={handleChange}\n                                    />\n                                    <Input\n                                        className={cx([\n                                            css.auth__form_registerInput,\n                                            css.auth__form_input_leftP,\n                                            css.auth__form_paddRight,\n                                        ])}\n                                        label={t(\"password_confirm\")}\n                                        variant=\"outlined\"\n                                        type=\"password\"\n                                        name=\"confirmPassword\"\n                                        error={errors.confirmPassword && touched.confirmPassword}\n                                        errorText={\n                                            touched.confirmPassword && errors.confirmPassword\n                                        }\n                                        onBlur={() =>\n                                            setFieldTouched(\"confirmPassword\", true, false)\n                                        }\n                                        value={values.confirmPassword}\n                                        onChange={handleChange}\n                                    />\n                                </div>\n\n                                <div\n                                    className=\"form-group form-check\"\n                                    style={{\n                                        display: \"flex\",\n                                        justifyContent: \"center\",\n                                        alignItems: \"center\",\n                                    }}\n                                >\n                                    <Field\n                                        type=\"checkbox\"\n                                        name=\"acceptTerms\"\n                                        style={{marginRight: \"10px\"}}\n                                        // error={errors.acceptTerms && touched.acceptTerms}\n                                        // errorText={touched.acceptTerms && errors.acceptTerms}\n                                        error={errors.acceptTerms && touched.acceptTerms}\n                                        errorText={\n                                            touched.acceptTerms && errors.acceptTerms\n\n                                        }\n                                        // checked={checkboxValue}\n                                        // onChange={() => console.log(setCheckboxValue(!checkboxValue))}\n                                    />\n                                    <p className={css.auth__policy}>\n                                        {t(\"privacy_first\")} <br/>\n                                        <p\n                                            className={css.auth__privicyLink}\n                                            onClick={() => setPrivacyOpened(true)}\n                                        >\n                                            {t(\"privacy_second\")}\n                                        </p>\n                                    </p>\n\n\n                                </div>\n                                {/* {!checkboxValue ? (<span style={{ display: 'flex', color: 'red', justifyContent: 'center', fontSize: '14px'}}>Accept terms of use</span>) : null} */}\n                                <Button\n                                    type=\"submit\"\n                                    color=\"primary\"\n                                    variant=\"contained\"\n                                    className={css.auth__button}\n                                    // disabled={isSubmitting || isLoadingAuth}\n                                    onClick={handleSubmit}\n                                >\n                                    {t(\"register\")}\n                                </Button>\n                            </form>\n                        )}\n                    </Formik>\n                </div>\n            </div>\n        </React.Fragment>\n    );\n};\n\n\nexport default RegisterPage"]},"metadata":{},"sourceType":"module"}