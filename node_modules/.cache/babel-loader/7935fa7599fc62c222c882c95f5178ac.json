{"ast":null,"code":"import axios from 'axios';\nimport shortid from 'shortid';\nimport cover from \"@assets/icons/catecory_cover.svg\";\nexport const categories = [{\n  title: 'Новости и политика',\n  id: shortid.generate(),\n  title_image: cover\n}, {\n  title: 'Транспорт',\n  id: shortid.generate(),\n  title_image: cover\n}, {\n  title: 'Мода и красота',\n  id: shortid.generate(),\n  title_image: ''\n}, {\n  title: 'Юмор',\n  id: shortid.generate(),\n  title_image: cover\n}, {\n  title: 'Образование',\n  id: shortid.generate(),\n  title_image: ''\n}, {\n  title: 'Развлечения',\n  id: shortid.generate(),\n  title_image: ''\n}, {\n  title: 'Для всей семьи',\n  id: shortid.generate(),\n  title_image: cover\n}, {\n  title: 'Кино и анимация',\n  id: shortid.generate(),\n  title_image: ''\n}, {\n  title: 'Кулинария',\n  id: shortid.generate(),\n  title_image: ''\n}, {\n  title: 'Игры',\n  id: shortid.generate(),\n  title_image: ''\n}, {\n  title: 'Хобби и стиль',\n  id: shortid.generate(),\n  title_image: cover\n}, {\n  title: 'Музыка',\n  id: shortid.generate(),\n  title_image: ''\n}, {\n  title: 'Общественная деятельность',\n  id: shortid.generate(),\n  title_image: ''\n}, {\n  title: 'Люди и блоги',\n  id: shortid.generate(),\n  title_image: ''\n}, {\n  title: 'Животные',\n  id: shortid.generate(),\n  title_image: cover\n}, {\n  title: 'Наука и техника',\n  id: shortid.generate(),\n  title_image: ''\n}, {\n  title: 'Спорт',\n  id: shortid.generate(),\n  title_image: ''\n}, {\n  title: 'Путешествия',\n  id: shortid.generate(),\n  title_image: ''\n}];\nconst baseURL = ''; // expect const getCategories\n\nexport const getCategories = () => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      let response = await axios.get(`${baseURL}/api/categories`, {\n        headers: new Headers({\n          'Content-Type': 'application/json'\n        })\n      });\n      resolve(response); // localStorage.setItem('token', response.data.token);\n      // localStorage.setItem('user', response.config.data);\n    } catch (err) {\n      reject(err);\n    }\n  });\n};","map":{"version":3,"sources":["/Users/oksanashukh/Desktop/finDig/src/components/Categories/categories-api.js"],"names":["axios","shortid","categories","title","id","generate","title_image","cover","baseURL","getCategories","Promise","resolve","reject","response","get","headers","Headers","err"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport shortid from 'shortid';\nimport cover from '@assets/icons/catecory_cover.svg';\n\nexport const categories = [\n  {\n    title: 'Новости и политика',\n    id: shortid.generate(),\n    title_image: cover,\n  },\n  { title: 'Транспорт', id: shortid.generate(), title_image: cover },\n  { title: 'Мода и красота', id: shortid.generate(), title_image: '' },\n  { title: 'Юмор', id: shortid.generate(), title_image: cover },\n  { title: 'Образование', id: shortid.generate(), title_image: '' },\n  { title: 'Развлечения', id: shortid.generate(), title_image: '' },\n  {\n    title: 'Для всей семьи',\n    id: shortid.generate(),\n    title_image: cover,\n  },\n  { title: 'Кино и анимация', id: shortid.generate(), title_image: '' },\n  { title: 'Кулинария', id: shortid.generate(), title_image: '' },\n  { title: 'Игры', id: shortid.generate(), title_image: '' },\n  {\n    title: 'Хобби и стиль',\n    id: shortid.generate(),\n    title_image: cover,\n  },\n  { title: 'Музыка', id: shortid.generate(), title_image: '' },\n  {\n    title: 'Общественная деятельность',\n    id: shortid.generate(),\n    title_image: '',\n  },\n  { title: 'Люди и блоги', id: shortid.generate(), title_image: '' },\n  { title: 'Животные', id: shortid.generate(), title_image: cover },\n  { title: 'Наука и техника', id: shortid.generate(), title_image: '' },\n  { title: 'Спорт', id: shortid.generate(), title_image: '' },\n  { title: 'Путешествия', id: shortid.generate(), title_image: '' },\n];\n\nconst baseURL = '';\n// expect const getCategories\nexport const getCategories = () => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      let response = await axios.get(\n        `${baseURL}/api/categories`,\n\n        { headers: new Headers({ 'Content-Type': 'application/json' }) },\n      );\n\n      resolve(response);\n      // localStorage.setItem('token', response.data.token);\n      // localStorage.setItem('user', response.config.data);\n    } catch (err) {\n      reject(err);\n    }\n  });\n};\n"]},"metadata":{},"sourceType":"module"}