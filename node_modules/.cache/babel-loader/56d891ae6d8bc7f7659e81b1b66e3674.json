{"ast":null,"code":"var _jsxFileName = \"/Users/oksanashukh/Desktop/INFOCOIN/infoCoin-frontend/src/components/VideoSwiper/VideoSwiper.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { Row, Col, Modal // Button,\n//  Form\n} from \"react-bootstrap\";\nimport \"@styles/components/HomeContainer.css\";\nimport \"@styles/components/VideoSwiper.css\";\nimport arrowRight from \"@assets/icons/arrow-right.svg\";\nimport { ReactComponent as Share } from \"@svgr/webpack?-svgo,+titleProp,+ref!@assets/icons/share.svg\";\nimport { ReactComponent as Eye } from \"@svgr/webpack?-svgo,+titleProp,+ref!@assets/icons/eye.svg\";\nimport { ReactComponent as Like } from \"@svgr/webpack?-svgo,+titleProp,+ref!@assets/icons/heart.svg\"; // import {\n//   FormControl,\n//   Radio,\n//   RadioGroup,\n//   FormControlLabel,\n// } from '@material-ui/core';\n\nimport { DefaultPlayer as Video } from \"react-html5video\";\nimport \"react-html5video/dist/styles.css\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport \"swiper/swiper-bundle.min.css\";\nimport \"swiper/swiper.min.css\";\nimport { stories } from \"./stories\";\nimport \"./gt.js\"; // import Geetest from 'react-geetest';\n// import ReCAPTCHA from \"react-google-recaptcha\";\n\nimport { Link } from \"react-router-dom\";\nimport LinkBrowsingHistoryItem from \"@components/History/LinkBrowsingHistoryItem\";\nimport UnacceptableСontentModal from \"./UnacceptableСontentModal\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst VideoSwiper = ({\n  props\n}) => {\n  _s();\n\n  const recaptchaRef = /*#__PURE__*/React.createRef();\n\n  const handleCaptcha = () => {\n    console.log(\"on handleCaptcha\");\n    setCaptchaConfirm(true);\n    setModalCaptcha(false);\n  }; // const onSuccess = isSuccess => console.log(isSuccess);\n  // const [reportValue, setReportValue] = useState('complain');\n  // const [complainValue, setComplainValue] = useState('reason1');\n  // const [showComplain, setShowComplain] = useState(false);\n\n\n  const swiperRef = useRef();\n  const videoRef = useRef();\n  const storiesData = stories; // console.log(story);\n  // const videoTime = vidioRef.currentTime;\n  // console.log(`current Time`, videoTime);\n  // if modalShow === true, then stop plaing video\n\n  const [modalShow, setModalShow] = useState(false);\n  const [modalCaptcha, setModalCaptcha] = useState(false);\n  const [captchaConfirm, setCaptchaConfirm] = useState(false);\n  const [targetVideo, setTargetVideo] = useState(\"\");\n\n  const handleCloseModal = () => {\n    setModalCaptcha(false);\n  };\n\n  const handlerToggleModal = evt => {\n    evt.preventDefault();\n\n    if (evt.target.id === evt.currentTarget.id) {\n      var _evt$target;\n\n      setTargetVideo(evt === null || evt === void 0 ? void 0 : (_evt$target = evt.target) === null || _evt$target === void 0 ? void 0 : _evt$target.id);\n      setModalShow(!modalShow);\n    }\n  };\n\n  useEffect(() => {\n    if (!modalCaptcha && videoRef.current) {\n      videoRef.current.videoEl.play();\n    }\n  }, [modalCaptcha]); // const playerRef = useRef();\n  // const [playing, setPlaying] = useState(true);\n  // const [randomSecond, setRandomSecond] = useState(0);\n  // const [captchaConfirmed, setCaptchaConfirmed] = useState(false);\n  // useEffect(() => {\n  //   if (playing || captchaConfirmed) {\n  //     return;\n  //   }\n  //   // checkCaptcha()\n  // }, [playing]);\n  // const checkCaptcha = () => {\n  //   if (window.confirm(\"Are you a human?\")) {\n  //     setCaptchaConfirmed(true);\n  //     setPlaying(true);\n  //   }\n  // };\n  // const [playing, setPlaying] = useState(false);\n  // const videoRef = useRef(null);\n  // const onVideoPress = () => {\n  //   if (playing) {\n  //     videoRef.current.pause();\n  //     setPlaying(false);\n  //   } else {\n  //     videoRef.current.play();\n  //     setPlaying(true);\n  //   }\n  // };\n  // function onChange(value) {\n  // console.log(\"Captcha value:\", value);\n  // }\n  // const recaptchaRef = React.createRef();\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Swiper, {\n      spaceBetween: 50,\n      loop: true,\n      slidesPerView: 1 // onSlideChange={() => console.log(\"slide change\")}\n      ,\n      onSwiper: swiper => swiperRef.current = swiper,\n      allowSlideNext: false,\n      allowSlidePrev: false // noSwiping={true}\n      ,\n      children: [props === undefined && (storiesData === null || storiesData === void 0 ? void 0 : storiesData.map(i => /*#__PURE__*/_jsxDEV(SwiperSlide, {\n        children: ({\n          isActive\n        }) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-column-align mob-padding\",\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              lg: 6,\n              md: 6,\n              sm: 12,\n              xs: 12,\n              className: \"flex-row-center-align info\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex-row-center-align\",\n                children: [/*#__PURE__*/_jsxDEV(Link, {\n                  to: {\n                    pathname: `${\"/profile\"}/${i.author.id}`,\n                    state: i === null || i === void 0 ? void 0 : i.author\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: i.author.avatar,\n                    alt: \"profile avatar\",\n                    className: \"profile-icon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 160,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-left\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                    className: \"title\",\n                    children: [/*#__PURE__*/_jsxDEV(Link, {\n                      to: {\n                        pathname: `${\"/profile\"}/${i.author.id}`,\n                        state: i === null || i === void 0 ? void 0 : i.author\n                      },\n                      children: i.author.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 168,\n                      columnNumber: 29\n                    }, this), \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 167,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                    className: \"hashtag\",\n                    children: i.author.tags.map(tag => /*#__PURE__*/_jsxDEV(\"li\", {\n                      className: \"hashtag-item\",\n                      children: tag\n                    }, tag, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 179,\n                      columnNumber: 31\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 177,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"icon-small ms-2:\",\n                src: arrowRight,\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 19\n          }, this), isActive ? /*#__PURE__*/_jsxDEV(Video // style={{marginLeft: \"-3px\"}}\n          , {\n            ref: videoRef,\n            playsInline: true,\n            autoPlay: true,\n            muted: false,\n            loop: false,\n            controls: [\"PlayPause\", \"Volume\"] // poster=\"https:eba.com.ua/wp-content/uploads/2017/11/rbsport1_mar08_prev-1.jpg\"\n            ,\n            onDurationChange: event => {\n              console.log(event.target.duration); // setRandomSecond(Math.floor(Math.random() * duration));\n            },\n            onPlay: () => {},\n            onEnded: () => {\n              swiperRef.current.allowSlideNext = true;\n              swiperRef.current.slideNext();\n              swiperRef.current.allowSlideNext = false;\n              setTimeout(() => {\n                videoRef.current.videoEl.pause();\n                setModalCaptcha(true);\n              }, 1000 * Math.floor(Math.random() * 3 + 1));\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"source\", {\n              defer: true,\n              src: i.url,\n              type: \"video/MP4\",\n              className: \"video\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(Modal, {\n              show: modalCaptcha,\n              onHide: handleCloseModal,\n              children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n                closeButton: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n                children: /*#__PURE__*/_jsxDEV(\"form\", {\n                  onSubmit: () => {\n                    recaptchaRef.current.execute();\n                    console.log(\"on submit\");\n                  },\n                  children: /*#__PURE__*/_jsxDEV(ReCAPTCHA, {\n                    ref: recaptchaRef // size=\"invisible\"\n                    ,\n                    sitekey: \"6LckU0MdAAAAADWY8V4yEJlDd-ibaCxEw9g7LbtI\",\n                    onChange: handleCaptcha\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 233,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 21\n          }, this) : /*#__PURE__*/_jsxDEV(Video, {\n            playsInline: true,\n            autoPlay: false,\n            muted: true,\n            loop: false,\n            controls: [\"PlayPause\", \"Volume\"],\n            onProgress: async data => {// if (\n              //   captchaConfirmed ||\n              //   data.playedSeconds < randomSecond\n              // ) {\n              //   return;\n              // }\n              // setPlaying(false);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            className: \"flex-row-center-align mt-2\",\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              lg: 6,\n              md: 6,\n              sm: 6,\n              xs: 6\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              lg: 6,\n              md: 6,\n              sm: 6,\n              xs: 6,\n              className: \"flex-end\",\n              children: [/*#__PURE__*/_jsxDEV(Share, {\n                className: \"icon-small icon-hover\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Eye, {\n                className: \"icon-small icon-hover ms-4\",\n                id: i.id // prop={}\n                ,\n                onClick: handlerToggleModal\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Like, {\n                className: \"icon-small icon-hover ms-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 17\n        }, this)\n      }, i.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }, this))), props !== undefined && /*#__PURE__*/_jsxDEV(LinkBrowsingHistoryItem, {\n        props: props,\n        arrowRight: arrowRight\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), modalShow && /*#__PURE__*/_jsxDEV(UnacceptableСontentModal, {\n      handlerToggleModal: handlerToggleModal,\n      videoId: targetVideo\n    }, targetVideo, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(VideoSwiper, \"4ZujBiXlvgThED8p5KacJKatNzo=\");\n\n_c = VideoSwiper;\nexport default VideoSwiper;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoSwiper\");","map":{"version":3,"sources":["/Users/oksanashukh/Desktop/INFOCOIN/infoCoin-frontend/src/components/VideoSwiper/VideoSwiper.js"],"names":["React","useState","useRef","useEffect","Row","Col","Modal","DefaultPlayer","Video","Swiper","SwiperSlide","stories","Link","LinkBrowsingHistoryItem","UnacceptableСontentModal","ReCAPTCHA","VideoSwiper","props","recaptchaRef","createRef","handleCaptcha","console","log","setCaptchaConfirm","setModalCaptcha","swiperRef","videoRef","storiesData","modalShow","setModalShow","modalCaptcha","captchaConfirm","targetVideo","setTargetVideo","handleCloseModal","handlerToggleModal","evt","preventDefault","target","id","currentTarget","current","videoEl","play","swiper","undefined","map","i","isActive","pathname","author","state","avatar","name","tags","tag","arrowRight","event","duration","allowSlideNext","slideNext","setTimeout","pause","Math","floor","random","url","execute","data"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,SACEC,GADF,EAEEC,GAFF,EAGEC,KAHF,CAIE;AACA;AALF,OAMO,iBANP;AAOA,OAAO,sCAAP;AACA,OAAO,oCAAP;;;;sGAKA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,aAAa,IAAIC,KAA1B,QAAuC,kBAAvC;AACA,OAAO,kCAAP;AACA,SAASC,MAAT,EAAiBC,WAAjB,QAAoC,cAApC;AACA,OAAO,8BAAP;AACA,OAAO,uBAAP;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,OAAO,SAAP,C,CACA;AACA;;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,uBAAP,MAAoC,6CAApC;AACA,OAAOC,wBAAP,MAAqC,4BAArC;AAEA,OAAOC,SAAP,MAAsB,wBAAtB;;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAAA;;AACjC,QAAMC,YAAY,gBAAGlB,KAAK,CAACmB,SAAN,EAArB;;AAEA,QAAMC,aAAa,GAAG,MAAM;AAC1BC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAC,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACAC,IAAAA,eAAe,CAAC,KAAD,CAAf;AACD,GAJD,CAHiC,CAQjC;AACA;AACA;AACA;;;AAEA,QAAMC,SAAS,GAAGvB,MAAM,EAAxB;AACA,QAAMwB,QAAQ,GAAGxB,MAAM,EAAvB;AACA,QAAMyB,WAAW,GAAGhB,OAApB,CAfiC,CAiBjC;AACA;AACA;AAEA;;AACA,QAAM,CAACiB,SAAD,EAAYC,YAAZ,IAA4B5B,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAAC6B,YAAD,EAAeN,eAAf,IAAkCvB,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAAC8B,cAAD,EAAiBR,iBAAjB,IAAsCtB,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM,CAAC+B,WAAD,EAAcC,cAAd,IAAgChC,QAAQ,CAAC,EAAD,CAA9C;;AACA,QAAMiC,gBAAgB,GAAG,MAAM;AAC7BV,IAAAA,eAAe,CAAC,KAAD,CAAf;AACD,GAFD;;AAIA,QAAMW,kBAAkB,GAAIC,GAAD,IAAS;AAClCA,IAAAA,GAAG,CAACC,cAAJ;;AAEA,QAAID,GAAG,CAACE,MAAJ,CAAWC,EAAX,KAAkBH,GAAG,CAACI,aAAJ,CAAkBD,EAAxC,EAA4C;AAAA;;AAC1CN,MAAAA,cAAc,CAACG,GAAD,aAACA,GAAD,sCAACA,GAAG,CAAEE,MAAN,gDAAC,YAAaC,EAAd,CAAd;AACAV,MAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACD;AACF,GAPD;;AASAzB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAAC2B,YAAD,IAAiBJ,QAAQ,CAACe,OAA9B,EAAuC;AACrCf,MAAAA,QAAQ,CAACe,OAAT,CAAiBC,OAAjB,CAAyBC,IAAzB;AACD;AACF,GAJQ,EAIN,CAACb,YAAD,CAJM,CAAT,CAvCiC,CA6CjC;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE;AAAA,4BAYE,QAAC,MAAD;AACE,MAAA,YAAY,EAAE,EADhB;AAEE,MAAA,IAAI,EAAE,IAFR;AAGE,MAAA,aAAa,EAAE,CAHjB,CAIE;AAJF;AAKE,MAAA,QAAQ,EAAGc,MAAD,IAAanB,SAAS,CAACgB,OAAV,GAAoBG,MAL7C;AAME,MAAA,cAAc,EAAE,KANlB;AAOE,MAAA,cAAc,EAAE,KAPlB,CAQE;AARF;AAAA,iBAUG3B,KAAK,KAAK4B,SAAV,KACClB,WADD,aACCA,WADD,uBACCA,WAAW,CAAEmB,GAAb,CAAkBC,CAAD,iBACf,QAAC,WAAD;AAAA,kBACG,CAAC;AAAEC,UAAAA;AAAF,SAAD,kBACC;AAAK,UAAA,SAAS,EAAC,+BAAf;AAAA,kCACE,QAAC,GAAD;AAAA,mCACE,QAAC,GAAD;AACE,cAAA,EAAE,EAAE,CADN;AAEE,cAAA,EAAE,EAAE,CAFN;AAGE,cAAA,EAAE,EAAE,EAHN;AAIE,cAAA,EAAE,EAAE,EAJN;AAKE,cAAA,SAAS,EAAC,4BALZ;AAAA,sCAOE;AAAK,gBAAA,SAAS,EAAC,uBAAf;AAAA,wCACE,QAAC,IAAD;AACE,kBAAA,EAAE,EAAE;AACFC,oBAAAA,QAAQ,EAAG,GAAE,UAAW,IAAGF,CAAC,CAACG,MAAF,CAASX,EAAG,EADrC;AAEFY,oBAAAA,KAAK,EAAEJ,CAAF,aAAEA,CAAF,uBAAEA,CAAC,CAAEG;AAFR,mBADN;AAAA,yCAME;AACE,oBAAA,GAAG,EAAEH,CAAC,CAACG,MAAF,CAASE,MADhB;AAEE,oBAAA,GAAG,EAAC,gBAFN;AAGE,oBAAA,SAAS,EAAC;AAHZ;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,wBADF,eAaE;AAAK,kBAAA,SAAS,EAAC,WAAf;AAAA,0CACE;AAAI,oBAAA,SAAS,EAAC,OAAd;AAAA,4CACE,QAAC,IAAD;AACE,sBAAA,EAAE,EAAE;AACFH,wBAAAA,QAAQ,EAAG,GAAE,UAAW,IAAGF,CAAC,CAACG,MAAF,CAASX,EAAG,EADrC;AAEFY,wBAAAA,KAAK,EAAEJ,CAAF,aAAEA,CAAF,uBAAEA,CAAC,CAAEG;AAFR,uBADN;AAAA,gCAMGH,CAAC,CAACG,MAAF,CAASG;AANZ;AAAA;AAAA;AAAA;AAAA,4BADF,EAQU,GARV;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAWE;AAAI,oBAAA,SAAS,EAAC,SAAd;AAAA,8BACGN,CAAC,CAACG,MAAF,CAASI,IAAT,CAAcR,GAAd,CAAmBS,GAAD,iBACjB;AAAc,sBAAA,SAAS,EAAC,cAAxB;AAAA,gCACGA;AADH,uBAASA,GAAT;AAAA;AAAA;AAAA;AAAA,4BADD;AADH;AAAA;AAAA;AAAA;AAAA,0BAXF;AAAA;AAAA;AAAA;AAAA;AAAA,wBAbF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPF,eAwCE;AACE,gBAAA,SAAS,EAAC,kBADZ;AAEE,gBAAA,GAAG,EAAEC,UAFP;AAGE,gBAAA,GAAG,EAAC;AAHN;AAAA;AAAA;AAAA;AAAA,sBAxCF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,EAiDGR,QAAQ,gBACP,QAAC,KAAD,CACE;AADF;AAEE,YAAA,GAAG,EAAEtB,QAFP;AAGE,YAAA,WAAW,MAHb;AAIE,YAAA,QAAQ,EAAE,IAJZ;AAKE,YAAA,KAAK,EAAE,KALT;AAME,YAAA,IAAI,EAAE,KANR;AAOE,YAAA,QAAQ,EAAE,CAAC,WAAD,EAAc,QAAd,CAPZ,CAQE;AARF;AASE,YAAA,gBAAgB,EAAG+B,KAAD,IAAW;AAC3BpC,cAAAA,OAAO,CAACC,GAAR,CAAYmC,KAAK,CAACnB,MAAN,CAAaoB,QAAzB,EAD2B,CAE3B;AACD,aAZH;AAaE,YAAA,MAAM,EAAE,MAAM,CAAE,CAblB;AAcE,YAAA,OAAO,EAAE,MAAM;AACbjC,cAAAA,SAAS,CAACgB,OAAV,CAAkBkB,cAAlB,GAAmC,IAAnC;AACAlC,cAAAA,SAAS,CAACgB,OAAV,CAAkBmB,SAAlB;AACAnC,cAAAA,SAAS,CAACgB,OAAV,CAAkBkB,cAAlB,GAAmC,KAAnC;AACAE,cAAAA,UAAU,CAAC,MAAM;AACfnC,gBAAAA,QAAQ,CAACe,OAAT,CAAiBC,OAAjB,CAAyBoB,KAAzB;AACAtC,gBAAAA,eAAe,CAAC,IAAD,CAAf;AACD,eAHS,EAGP,OAAOuC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAAhB,GAAoB,CAA/B,CAHA,CAAV;AAID,aAtBH;AAAA,oCAwBE;AACE,cAAA,KAAK,MADP;AAEE,cAAA,GAAG,EAAElB,CAAC,CAACmB,GAFT;AAGE,cAAA,IAAI,EAAC,WAHP;AAIE,cAAA,SAAS,EAAC;AAJZ;AAAA;AAAA;AAAA;AAAA,oBAxBF,eA8BE,QAAC,KAAD;AAAO,cAAA,IAAI,EAAEpC,YAAb;AAA2B,cAAA,MAAM,EAAEI,gBAAnC;AAAA,sCACE,QAAC,KAAD,CAAO,MAAP;AAAc,gBAAA,WAAW;AAAzB;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,KAAD,CAAO,IAAP;AAAA,uCACE;AACE,kBAAA,QAAQ,EAAE,MAAM;AACdhB,oBAAAA,YAAY,CAACuB,OAAb,CAAqB0B,OAArB;AACA9C,oBAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACD,mBAJH;AAAA,yCAME,QAAC,SAAD;AACE,oBAAA,GAAG,EAAEJ,YADP,CAEE;AAFF;AAGE,oBAAA,OAAO,EAAC,0CAHV;AAIE,oBAAA,QAAQ,EAAEE;AAJZ;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBA9BF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADO,gBA+DP,QAAC,KAAD;AACE,YAAA,WAAW,MADb;AAEE,YAAA,QAAQ,EAAE,KAFZ;AAGE,YAAA,KAAK,EAAE,IAHT;AAIE,YAAA,IAAI,EAAE,KAJR;AAKE,YAAA,QAAQ,EAAE,CAAC,WAAD,EAAc,QAAd,CALZ;AAME,YAAA,UAAU,EAAE,MAAOgD,IAAP,IAAgB,CAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AAdH;AAAA;AAAA;AAAA;AAAA,kBAhHJ,eAkIE,QAAC,GAAD;AAAK,YAAA,SAAS,EAAC,4BAAf;AAAA,oCACE,QAAC,GAAD;AAAK,cAAA,EAAE,EAAE,CAAT;AAAY,cAAA,EAAE,EAAE,CAAhB;AAAmB,cAAA,EAAE,EAAE,CAAvB;AAA0B,cAAA,EAAE,EAAE;AAA9B;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE,QAAC,GAAD;AAAK,cAAA,EAAE,EAAE,CAAT;AAAY,cAAA,EAAE,EAAE,CAAhB;AAAmB,cAAA,EAAE,EAAE,CAAvB;AAA0B,cAAA,EAAE,EAAE,CAA9B;AAAiC,cAAA,SAAS,EAAC,UAA3C;AAAA,sCACE,QAAC,KAAD;AAAO,gBAAA,SAAS,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,GAAD;AACE,gBAAA,SAAS,EAAC,4BADZ;AAEE,gBAAA,EAAE,EAAErB,CAAC,CAACR,EAFR,CAGE;AAHF;AAIE,gBAAA,OAAO,EAAEJ;AAJX;AAAA;AAAA;AAAA;AAAA,sBAFF,eASE,QAAC,IAAD;AAAM,gBAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,sBATF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAlIF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ,SAAkBY,CAAC,CAACR,EAApB;AAAA;AAAA;AAAA;AAAA,cADF,CADD,CAVH,EAqKGtB,KAAK,KAAK4B,SAAV,iBACC,QAAC,uBAAD;AAAyB,QAAA,KAAK,EAAE5B,KAAhC;AAAuC,QAAA,UAAU,EAAEuC;AAAnD;AAAA;AAAA;AAAA;AAAA,cAtKJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF,EAqLG5B,SAAS,iBACR,QAAC,wBAAD;AACE,MAAA,kBAAkB,EAAEO,kBADtB;AAGE,MAAA,OAAO,EAAEH;AAHX,OAEOA,WAFP;AAAA;AAAA;AAAA;AAAA,YAtLJ;AAAA,kBADF;AA+LD,CAhRD;;GAAMhB,W;;KAAAA,W;AAkRN,eAAeA,WAAf","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport {\n  Row,\n  Col,\n  Modal,\n  // Button,\n  //  Form\n} from \"react-bootstrap\";\nimport \"@styles/components/HomeContainer.css\";\nimport \"@styles/components/VideoSwiper.css\";\nimport arrowRight from \"@assets/icons/arrow-right.svg\";\nimport { ReactComponent as Share } from \"@assets/icons/share.svg\";\nimport { ReactComponent as Eye } from \"@assets/icons/eye.svg\";\nimport { ReactComponent as Like } from \"@assets/icons/heart.svg\";\n// import {\n//   FormControl,\n//   Radio,\n//   RadioGroup,\n//   FormControlLabel,\n// } from '@material-ui/core';\nimport { DefaultPlayer as Video } from \"react-html5video\";\nimport \"react-html5video/dist/styles.css\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport \"swiper/swiper-bundle.min.css\";\nimport \"swiper/swiper.min.css\";\nimport { stories } from \"./stories\";\nimport \"./gt.js\";\n// import Geetest from 'react-geetest';\n// import ReCAPTCHA from \"react-google-recaptcha\";\nimport { Link } from \"react-router-dom\";\nimport LinkBrowsingHistoryItem from \"@components/History/LinkBrowsingHistoryItem\";\nimport UnacceptableСontentModal from \"./UnacceptableСontentModal\";\n\nimport ReCAPTCHA from \"react-google-recaptcha\";\n\nconst VideoSwiper = ({ props }) => {\n  const recaptchaRef = React.createRef();\n\n  const handleCaptcha = () => {\n    console.log(\"on handleCaptcha\")\n    setCaptchaConfirm(true);\n    setModalCaptcha(false);\n  };\n  // const onSuccess = isSuccess => console.log(isSuccess);\n  // const [reportValue, setReportValue] = useState('complain');\n  // const [complainValue, setComplainValue] = useState('reason1');\n  // const [showComplain, setShowComplain] = useState(false);\n\n  const swiperRef = useRef();\n  const videoRef = useRef();\n  const storiesData = stories;\n\n  // console.log(story);\n  // const videoTime = vidioRef.currentTime;\n  // console.log(`current Time`, videoTime);\n\n  // if modalShow === true, then stop plaing video\n  const [modalShow, setModalShow] = useState(false);\n  const [modalCaptcha, setModalCaptcha] = useState(false);\n  const [captchaConfirm, setCaptchaConfirm] = useState(false);\n  const [targetVideo, setTargetVideo] = useState(\"\");\n  const handleCloseModal = () => {\n    setModalCaptcha(false);\n  };\n\n  const handlerToggleModal = (evt) => {\n    evt.preventDefault();\n\n    if (evt.target.id === evt.currentTarget.id) {\n      setTargetVideo(evt?.target?.id);\n      setModalShow(!modalShow);\n    }\n  };\n\n  useEffect(() => {\n    if (!modalCaptcha && videoRef.current) {\n      videoRef.current.videoEl.play();\n    }\n  }, [modalCaptcha]);\n\n  // const playerRef = useRef();\n  // const [playing, setPlaying] = useState(true);\n  // const [randomSecond, setRandomSecond] = useState(0);\n  // const [captchaConfirmed, setCaptchaConfirmed] = useState(false);\n\n  // useEffect(() => {\n  //   if (playing || captchaConfirmed) {\n  //     return;\n  //   }\n  //   // checkCaptcha()\n  // }, [playing]);\n\n  // const checkCaptcha = () => {\n  //   if (window.confirm(\"Are you a human?\")) {\n  //     setCaptchaConfirmed(true);\n  //     setPlaying(true);\n  //   }\n  // };\n\n  // const [playing, setPlaying] = useState(false);\n  // const videoRef = useRef(null);\n\n  // const onVideoPress = () => {\n  //   if (playing) {\n  //     videoRef.current.pause();\n  //     setPlaying(false);\n  //   } else {\n  //     videoRef.current.play();\n  //     setPlaying(true);\n  //   }\n  // };\n  // function onChange(value) {\n  // console.log(\"Captcha value:\", value);\n  // }\n  // const recaptchaRef = React.createRef();\n\n  return (\n    <>\n      {/* <Geetest\n      gt=\"your-gt\"\n      challenge=\"your-challenge\"\n      onSuccess={onSuccess}\n    /> */}\n      {/* <ReCAPTCHA\n    sitekey=\"6LckU0MdAAAAADWY8V4yEJlDd-ibaCxEw9g7LbtI\"\n    onChange={onChange}\n  \n  /> */}\n\n      <Swiper\n        spaceBetween={50}\n        loop={true}\n        slidesPerView={1}\n        // onSlideChange={() => console.log(\"slide change\")}\n        onSwiper={(swiper) => (swiperRef.current = swiper)}\n        allowSlideNext={false}\n        allowSlidePrev={false}\n        // noSwiping={true}\n      >\n        {props === undefined &&\n          storiesData?.map((i) => (\n            <SwiperSlide key={i.id}>\n              {({ isActive }) => (\n                <div className=\"flex-column-align mob-padding\">\n                  <Row>\n                    <Col\n                      lg={6}\n                      md={6}\n                      sm={12}\n                      xs={12}\n                      className=\"flex-row-center-align info\"\n                    >\n                      <div className=\"flex-row-center-align\">\n                        <Link\n                          to={{\n                            pathname: `${\"/profile\"}/${i.author.id}`,\n                            state: i?.author,\n                          }}\n                        >\n                          <img\n                            src={i.author.avatar}\n                            alt=\"profile avatar\"\n                            className=\"profile-icon\"\n                          />\n                        </Link>\n                        <div className=\"text-left\">\n                          <h2 className=\"title\">\n                            <Link\n                              to={{\n                                pathname: `${\"/profile\"}/${i.author.id}`,\n                                state: i?.author,\n                              }}\n                            >\n                              {i.author.name}\n                            </Link>{\" \"}\n                          </h2>\n                          <ul className=\"hashtag\">\n                            {i.author.tags.map((tag) => (\n                              <li key={tag} className=\"hashtag-item\">\n                                {tag}\n                              </li>\n                            ))}\n                          </ul>\n                        </div>\n                      </div>\n                      <img\n                        className=\"icon-small ms-2:\"\n                        src={arrowRight}\n                        alt=\"\"\n                      />\n                    </Col>\n                  </Row>\n                  {isActive ? (\n                    <Video\n                      // style={{marginLeft: \"-3px\"}}\n                      ref={videoRef}\n                      playsInline\n                      autoPlay={true}\n                      muted={false}\n                      loop={false}\n                      controls={[\"PlayPause\", \"Volume\"]}\n                      // poster=\"https:eba.com.ua/wp-content/uploads/2017/11/rbsport1_mar08_prev-1.jpg\"\n                      onDurationChange={(event) => {\n                        console.log(event.target.duration);\n                        // setRandomSecond(Math.floor(Math.random() * duration));\n                      }}\n                      onPlay={() => {}}\n                      onEnded={() => {\n                        swiperRef.current.allowSlideNext = true;\n                        swiperRef.current.slideNext();\n                        swiperRef.current.allowSlideNext = false;\n                        setTimeout(() => {\n                          videoRef.current.videoEl.pause();\n                          setModalCaptcha(true);\n                        }, 1000 * Math.floor(Math.random() * 3 + 1));\n                      }}\n                    >\n                      <source\n                        defer\n                        src={i.url}\n                        type=\"video/MP4\"\n                        className=\"video\"\n                      />\n                      <Modal show={modalCaptcha} onHide={handleCloseModal}>\n                        <Modal.Header closeButton></Modal.Header>\n                        <Modal.Body>\n                          <form\n                            onSubmit={() => {\n                              recaptchaRef.current.execute();\n                              console.log(\"on submit\")\n                            }}\n                          >\n                            <ReCAPTCHA\n                              ref={recaptchaRef}\n                              // size=\"invisible\"\n                              sitekey=\"6LckU0MdAAAAADWY8V4yEJlDd-ibaCxEw9g7LbtI\"\n                              onChange={handleCaptcha}\n                            />\n                          </form>\n                        </Modal.Body>\n                        {/* <Modal.Footer>\n                          <Button\n                            variant=\"secondary\"\n                            onClick={handleCloseModal}\n                          >\n                            Close\n                          </Button>\n                          <Button variant=\"primary\" onClick={handleConfirm}>\n                            Confirm\n                          </Button>\n                        </Modal.Footer> */}\n                      </Modal>\n                      {/* <track label=\"English\" kind=\"subtitles\" srcLang=\"en\" src=\"http:source.vtt\" default /> */}\n                    </Video>\n                  ) : (\n                    <Video\n                      playsInline\n                      autoPlay={false}\n                      muted={true}\n                      loop={false}\n                      controls={[\"PlayPause\", \"Volume\"]}\n                      onProgress={async (data) => {\n                        // if (\n                        //   captchaConfirmed ||\n                        //   data.playedSeconds < randomSecond\n                        // ) {\n                        //   return;\n                        // }\n                        // setPlaying(false);\n                      }}\n                    ></Video>\n                  )}\n\n                  <Row className=\"flex-row-center-align mt-2\">\n                    <Col lg={6} md={6} sm={6} xs={6}>\n                      {/* <img src={speaker} alt=\"\" />  */}\n                    </Col>\n                    <Col lg={6} md={6} sm={6} xs={6} className=\"flex-end\">\n                      <Share className=\"icon-small icon-hover\" />\n                      <Eye\n                        className=\"icon-small icon-hover ms-4\"\n                        id={i.id}\n                        // prop={}\n                        onClick={handlerToggleModal}\n                      />\n\n                      <Like className=\"icon-small icon-hover ms-4\" />\n                    </Col>\n                  </Row>\n                </div>\n              )}\n            </SwiperSlide>\n          ))}\n\n        {props !== undefined && (\n          <LinkBrowsingHistoryItem props={props} arrowRight={arrowRight} />\n        )}\n      </Swiper>\n      {modalShow && (\n        <UnacceptableСontentModal\n          handlerToggleModal={handlerToggleModal}\n          key={targetVideo}\n          videoId={targetVideo}\n        />\n      )}\n    </>\n  );\n};\n\nexport default VideoSwiper;\n"]},"metadata":{},"sourceType":"module"}