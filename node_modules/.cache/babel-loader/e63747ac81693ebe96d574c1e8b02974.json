{"ast":null,"code":"var _jsxFileName = \"/Users/oksanashukh/Desktop/INFOCOIN/infoCoin-frontend/src/pages/LoginPage/index.js\";\nimport React from 'react';\nimport Input from '@components/Form/Input';\nimport Formik from '@helpers/Formik';\nimport { LoginSchema } from '@helpers/Formik/validation'; // import { Link } from 'react-router-dom';\n\nimport { Button } from '@material-ui/core';\nimport { loginAPI } from '@services/api/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginPage = ({\n  isLoadingAuth,\n  loginAction,\n  pendingAction,\n  addNotificationAction\n}) => {\n  const handleSubmit1 = () => {\n    return loginAPI();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          email: '',\n          password: ''\n        },\n        validationSchema: LoginSchema,\n        onSubmit: (values, actions) => {\n          handleSubmit1(values).catch(error => {\n            console.log(JSON.stringify(error));\n            actions.setErrors({\n              email: ' ',\n              password: ' '\n            }); // if (error?.notification) {\n            //     addNotificationAction({type: 'error', text: error.message});\n            //     return\n            // }\n            // console.log(error)\n          });\n        },\n        children: ({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleSubmit,\n          isSubmitting\n        }) => /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"email\",\n            label: \"Email\",\n            type: \"email\",\n            name: \"email\",\n            variant: \"outlined\",\n            error: errors.email && touched.email,\n            errorText: errors.email && touched.email && errors.email,\n            value: values.email,\n            onChange: handleChange,\n            shrink: \"false\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"**********\",\n            label: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n            type: \"password\",\n            name: \"password\",\n            variant: \"outlined\",\n            error: errors.password && touched.password,\n            errorText: errors.password && touched.password && errors.password,\n            value: values.password,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"contained\",\n              color: \"primary\",\n              onClick: handleSubmit1,\n              className: \"btn-prime my-3\",\n              children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_c = LoginPage;\nexport default LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["/Users/oksanashukh/Desktop/INFOCOIN/infoCoin-frontend/src/pages/LoginPage/index.js"],"names":["React","Input","Formik","LoginSchema","Button","loginAPI","LoginPage","isLoadingAuth","loginAction","pendingAction","addNotificationAction","handleSubmit1","email","password","values","actions","catch","error","console","log","JSON","stringify","setErrors","errors","touched","handleChange","handleSubmit","isSubmitting"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Input from '@components/Form/Input';\nimport Formik from '@helpers/Formik';\nimport { LoginSchema } from '@helpers/Formik/validation';\n// import { Link } from 'react-router-dom';\nimport { Button } from '@material-ui/core';\nimport { loginAPI } from '@services/api/auth';\n\nconst LoginPage = ({\n  isLoadingAuth,\n  loginAction,\n  pendingAction,\n  addNotificationAction,\n}) => {\n  const handleSubmit1 = () => {\n    return loginAPI();\n  };\n  return (\n    <div>\n      <div>\n        <Formik\n          initialValues={{ email: '', password: '' }}\n          validationSchema={LoginSchema}\n          onSubmit={(values, actions) => {\n            handleSubmit1(values).catch(error => {\n              console.log(JSON.stringify(error));\n              actions.setErrors({\n                email: ' ',\n                password: ' ',\n              });\n              // if (error?.notification) {\n              //     addNotificationAction({type: 'error', text: error.message});\n              //     return\n              // }\n              // console.log(error)\n            });\n          }}\n        >\n          {({\n            values,\n            errors,\n            touched,\n            handleChange,\n            handleSubmit,\n            isSubmitting,\n          }) => (\n            <form>\n              <Input\n                placeholder=\"email\"\n                label=\"Email\"\n                type=\"email\"\n                name=\"email\"\n                variant=\"outlined\"\n                error={errors.email && touched.email}\n                errorText={errors.email && touched.email && errors.email}\n                value={values.email}\n                onChange={handleChange}\n                shrink=\"false\"\n              />\n              <Input\n                placeholder=\"**********\"\n                label=\"Пароль\"\n                type=\"password\"\n                name=\"password\"\n                variant=\"outlined\"\n                error={errors.password && touched.password}\n                errorText={\n                  errors.password && touched.password && errors.password\n                }\n                value={values.password}\n                onChange={handleChange}\n              />\n              <div>\n                {/* <Link to=\"/forgot\">Forgot password ?</Link> */}\n                <Button\n                  type=\"submit\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={handleSubmit1}\n                  className=\"btn-prime my-3\"\n                >\n                  Войти\n                </Button>\n              </div>\n            </form>\n          )}\n        </Formik>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginPage;\n"]},"metadata":{},"sourceType":"module"}