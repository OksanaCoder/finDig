{"ast":null,"code":"import * as Yup from 'yup';\nimport i18n from \"i18next\";\n\nconst SignupSchema = () => Yup.object().shape({\n  email: Yup.string().email('invalid email').required('required'),\n  password: Yup.string().min(8, 'min', {\n    num: 8\n  }).max(100, 'max', {\n    num: 100\n  }).required('required'),\n  confirmPassword: Yup.string().min(8, 'min', {\n    num: 8\n  }).max(100, 'max', {\n    num: 100\n  }).oneOf([Yup.ref('password'), null], 'password do not match').required('required'),\n  firstName: Yup.string().min(1, 'min', {\n    num: 1\n  }).max(16, 'max', {\n    num: 16\n  }).required('required'),\n  lastName: Yup.string().min(1, 'min', {\n    num: 1\n  }).max(16, 'max', {\n    num: 16\n  }).required('required'),\n  phone: Yup.string().matches(/\\(?([0-9]{3})\\)?([ .-]?)([0-9]{3})\\2([0-9]{4})/, {\n    message: 'phone number is not valid',\n    excludeEmptyString: false\n  }).required('required'),\n  acceptTerms: Yup.bool() // .oneOf([true], 'Accept Terms & Conditions is required')\n  .required('required')\n});\n\n_c = SignupSchema;\nexport const LoginSchema = () => Yup.object().shape({\n  email: Yup.string().email('invalid email').required('required'),\n  password: Yup.string().required('required')\n});\n_c2 = LoginSchema;\nexport const ForgotPasswordSchema = () => Yup.object().shape({\n  email: Yup.string().email('invalid_email').required('required')\n});\n_c3 = ForgotPasswordSchema;\nexport const ResetPasswordSchema = () => Yup.object().shape({\n  password: Yup.string().min(5, 'min', {\n    num: 5\n  }).max(100, 'max', {\n    num: 100\n  }).required('required'),\n  confirmPassword: Yup.string().min(5, 'min', {\n    num: 5\n  }).max(100, 'max', {\n    num: 100\n  }).oneOf([Yup.ref('password'), null], 'password do not match').required('required')\n});\n_c4 = ResetPasswordSchema;\nexport const CurrentUserPassRecoverySchema = () => Yup.object().shape({\n  password: Yup.string().min(5, 'min', {\n    num: 5\n  }).max(100, 'max', {\n    num: 100\n  }).required('required'),\n  confirmPassword: Yup.string().min(5, 'min', {\n    num: 5\n  }).oneOf([Yup.ref('password'), null], 'password do not match').required('required')\n});\n_c5 = CurrentUserPassRecoverySchema;\nexport default SignupSchema;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"SignupSchema\");\n$RefreshReg$(_c2, \"LoginSchema\");\n$RefreshReg$(_c3, \"ForgotPasswordSchema\");\n$RefreshReg$(_c4, \"ResetPasswordSchema\");\n$RefreshReg$(_c5, \"CurrentUserPassRecoverySchema\");","map":{"version":3,"sources":["/Users/oksanashukh/Desktop/INFOCOIN/app/src/helpers/Formik/validation.js"],"names":["Yup","i18n","SignupSchema","object","shape","email","string","required","password","min","num","max","confirmPassword","oneOf","ref","firstName","lastName","phone","matches","message","excludeEmptyString","acceptTerms","bool","LoginSchema","ForgotPasswordSchema","ResetPasswordSchema","CurrentUserPassRecoverySchema"],"mappings":"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","sourcesContent":["import * as Yup from 'yup';\nimport i18n from \"i18next\";\n\n\nconst SignupSchema = () =>\n  Yup.object().shape({\n    email: Yup.string()\n      .email('invalid email')\n      .required('required'),\n    password: Yup.string()\n      .min(8, 'min', { num: 8 })\n      .max(100, 'max', {  num: 100 })\n      .required('required'),\n    confirmPassword: Yup.string()\n      .min(8, 'min', { num: 8 })\n      .max(100, 'max', {  num: 100 })\n      .oneOf([Yup.ref('password'), null], 'password do not match')\n      .required('required'),\n    firstName: Yup.string()\n      .min(1, 'min', { num: 1 })\n      .max(16, 'max', {  num: 16 })\n      .required('required'),\n    lastName: Yup.string()\n      .min(1, 'min', { num: 1 })\n      .max(16, 'max', {  num: 16 })\n      .required('required'),\n    phone: Yup.string()\n      .matches(/\\(?([0-9]{3})\\)?([ .-]?)([0-9]{3})\\2([0-9]{4})/, {message: 'phone number is not valid', excludeEmptyString: false})\n      .required('required'),     \n    acceptTerms: Yup.bool()\n    // .oneOf([true], 'Accept Terms & Conditions is required')\n    .required('required'),   \n  });\n \nexport const LoginSchema = () =>\n  Yup.object().shape({\n    email: Yup.string()\n      .email('invalid email')\n      .required('required'),\n    password: Yup.string().required('required'),\n  });\n\nexport const ForgotPasswordSchema = () =>\n  Yup.object().shape({\n    email: Yup.string()\n     .email('invalid_email')\n     .required('required'),\n  });\n\nexport const ResetPasswordSchema = () =>\n  Yup.object().shape({\n    password: Yup.string()\n      .min(5, 'min', { num: 5 })\n      .max(100, 'max', { num: 100 })\n      .required('required'),\n    confirmPassword: Yup.string()\n      .min(5, 'min', { num: 5 })\n      .max(100, 'max', { num: 100 })\n      .oneOf([Yup.ref('password'), null], 'password do not match')\n      .required('required'),\n  });\n\n\nexport const CurrentUserPassRecoverySchema = () =>\n  Yup.object().shape({\n    password: Yup.string()\n      .min(5, 'min', { num: 5 })\n      .max(100,  'max', { num: 100 })\n      .required('required'),\n    confirmPassword: Yup.string()\n      .min(5, 'min', { num: 5 })\n      .oneOf([Yup.ref('password'), null], 'password do not match')\n      .required('required'),\n  });\n\n\nexport default SignupSchema;\n"]},"metadata":{},"sourceType":"module"}