{"ast":null,"code":"import * as Yup from 'yup';\nimport i18n from \"i18next\"; // const phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/\n\nconst SignupSchema = () => Yup.object().shape({\n  email: Yup.string().email(i18n.t('invalid_email')).required(i18n.t('required')),\n  password: Yup.string().min(8, i18n.t('min', {\n    num: 8\n  })).max(100, i18n.t('max', {\n    num: 100\n  })).required(i18n.t('required')),\n  confirmPassword: Yup.string().min(8, i18n.t('min', {\n    num: 8\n  })).max(100, i18n.t('max', {\n    num: 100\n  })).oneOf([Yup.ref('password'), null], i18n.t('password_not_match')).required(i18n.t('required')),\n  firstName: Yup.string().min(1, i18n.t('min', {\n    num: 1\n  })).max(16, i18n.t('max', {\n    num: 16\n  })).required(i18n.t('required')),\n  lastName: Yup.string().min(1, i18n.t('min', {\n    num: 1\n  })).max(16, i18n.t('max', {\n    num: 16\n  })).required(i18n.t('required')),\n  phone: Yup.string().matches(/\\(?([0-9]{3})\\)?([ .-]?)([0-9]{3})\\2([0-9]{4})/, {\n    message: i18n.t('phone_validation'),\n    excludeEmptyString: false\n  }).required(i18n.t('required')),\n  acceptTerms: Yup.bool() // .oneOf([true], 'Accept Terms & Conditions is required')\n  .required(i18n.t('required'))\n});\n\n_c = SignupSchema;\nexport const LoginSchema = () => Yup.object().shape({\n  email: Yup.string().email(i18n.t('invalid_email')).required(i18n.t('required')),\n  password: Yup.string().required(i18n.t('required'))\n});\n_c2 = LoginSchema;\nexport const ForgotPasswordSchema = () => Yup.object().shape({\n  email: Yup.string().email(i18n.t('invalid_email')).required(i18n.t('required'))\n});\n_c3 = ForgotPasswordSchema;\nexport const ResetPasswordSchema = () => Yup.object().shape({\n  password: Yup.string().min(5, i18n.t('min', {\n    num: 5\n  })).max(100, i18n.t('max', {\n    num: 100\n  })).required(i18n.t('required')),\n  confirmPassword: Yup.string().min(5, i18n.t('min', {\n    num: 5\n  })).max(100, i18n.t('max', {\n    num: 100\n  })).oneOf([Yup.ref('password'), null], i18n.t('password_not_match')).required(i18n.t('required'))\n});\n_c4 = ResetPasswordSchema;\nexport const CurrentUserPassRecoverySchema = () => Yup.object().shape({\n  password: Yup.string().min(5, i18n.t('min', {\n    num: 5\n  })).max(100, i18n.t('max', {\n    num: 100\n  })).required(i18n.t('required')),\n  confirmPassword: Yup.string().min(5, i18n.t('min', {\n    num: 5\n  })).oneOf([Yup.ref('password'), null], i18n.t('password_not_match')).required(i18n.t('required'))\n});\n_c5 = CurrentUserPassRecoverySchema;\nexport default SignupSchema;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"SignupSchema\");\n$RefreshReg$(_c2, \"LoginSchema\");\n$RefreshReg$(_c3, \"ForgotPasswordSchema\");\n$RefreshReg$(_c4, \"ResetPasswordSchema\");\n$RefreshReg$(_c5, \"CurrentUserPassRecoverySchema\");","map":{"version":3,"sources":["/Users/oksanashukh/Desktop/INFOCOIN/app/src/helpers/Formik/validation.js"],"names":["Yup","i18n","SignupSchema","object","shape","email","string","t","required","password","min","num","max","confirmPassword","oneOf","ref","firstName","lastName","phone","matches","message","excludeEmptyString","acceptTerms","bool","LoginSchema","ForgotPasswordSchema","ResetPasswordSchema","CurrentUserPassRecoverySchema"],"mappings":"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","sourcesContent":["import * as Yup from 'yup';\nimport i18n from \"i18next\";\n\n// const phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/\n\nconst SignupSchema = () =>\n  Yup.object().shape({\n    email: Yup.string()\n      .email(i18n.t('invalid_email'))\n      .required(i18n.t('required')),\n    password: Yup.string()\n      .min(8, i18n.t('min', { num: 8 }))\n      .max(100, i18n.t('max', {  num: 100 }))\n      .required(i18n.t('required')),\n    confirmPassword: Yup.string()\n      .min(8, i18n.t('min', { num: 8 }))\n      .max(100, i18n.t('max', {  num: 100 }))\n      .oneOf([Yup.ref('password'), null], i18n.t('password_not_match'))\n      .required(i18n.t('required')),\n    firstName: Yup.string()\n      .min(1, i18n.t('min', { num: 1 }))\n      .max(16, i18n.t('max', {  num: 16 }))\n      .required(i18n.t('required')),\n    lastName: Yup.string()\n      .min(1, i18n.t('min', { num: 1 }))\n      .max(16, i18n.t('max', {  num: 16 }))\n      .required(i18n.t('required')),\n    phone: Yup.string()\n      .matches(/\\(?([0-9]{3})\\)?([ .-]?)([0-9]{3})\\2([0-9]{4})/, {message: i18n.t('phone_validation'), excludeEmptyString: false})\n      .required(i18n.t('required')),     \n    acceptTerms: Yup.bool()\n    // .oneOf([true], 'Accept Terms & Conditions is required')\n    .required(i18n.t('required')),   \n  });\n \nexport const LoginSchema = () =>\n  Yup.object().shape({\n    email: Yup.string()\n      .email(i18n.t('invalid_email'))\n      .required(i18n.t('required')),\n    password: Yup.string().required(i18n.t('required')),\n  });\n\nexport const ForgotPasswordSchema = () =>\n  Yup.object().shape({\n    email: Yup.string()\n     .email(i18n.t('invalid_email'))\n     .required(i18n.t('required')),\n  });\n\nexport const ResetPasswordSchema = () =>\n  Yup.object().shape({\n    password: Yup.string()\n      .min(5, i18n.t('min', { num: 5 }))\n      .max(100, i18n.t('max', { num: 100 }))\n      .required(i18n.t('required')),\n    confirmPassword: Yup.string()\n      .min(5, i18n.t('min', { num: 5 }))\n      .max(100, i18n.t('max', { num: 100 }))\n      .oneOf([Yup.ref('password'), null], i18n.t('password_not_match'))\n      .required(i18n.t('required')),\n  });\n\n\nexport const CurrentUserPassRecoverySchema = () =>\n  Yup.object().shape({\n    password: Yup.string()\n      .min(5, i18n.t('min', { num: 5 }))\n      .max(100, i18n.t('max', { num: 100 }))\n      .required(i18n.t('required')),\n    confirmPassword: Yup.string()\n      .min(5, i18n.t('min', { num: 5 }))\n      .oneOf([Yup.ref('password'), null], i18n.t('password_not_match'))\n      .required(i18n.t('required')),\n  });\n\n\nexport default SignupSchema;\n"]},"metadata":{},"sourceType":"module"}