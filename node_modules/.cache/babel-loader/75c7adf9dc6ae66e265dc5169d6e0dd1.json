{"ast":null,"code":"var _jsxFileName = \"/Users/oksanashukh/Desktop/INFOCOIN/infoCoin-frontend/src/pages/RegisterPage/index.js\";\n\n/* eslint-disable react/jsx-no-target-blank */\n// import React, {useState} from \"react\";\nimport React from 'react'; // import {Link, useHistory} from \"react-router-dom\";\n\nimport { Button } from '@material-ui/core';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Input from '@components/Form/Input';\nimport SignupSchema from '@helpers/Formik/validation';\nimport Formik from '@helpers/Formik';\nimport { signUpAPI } from '@services/api/auth'; // import PrivacyPopup from \"@containers/PrivacyPopup/PrivacyPopup\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegisterPage = ({\n  isLoadingAuth,\n  registerAction,\n  pendingAction,\n  addNotificationAction\n}) => {\n  const registerUser = values => {\n    return signUpAPI(values);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            email: '',\n            password: '',\n            name: '',\n            phone: ''\n          },\n          validationSchema: SignupSchema,\n          onSubmit: (values, actions) => {\n            registerUser(values).catch(error => {\n              console.log(JSON.stringify(error));\n              actions.setErrors({\n                email: \" \",\n                password: \" \",\n                name: \" \",\n                phone: \" \"\n              });\n            });\n          },\n          children: ({\n            setFieldTouched,\n            values,\n            errors,\n            touched,\n            handleChange,\n            handleSubmit,\n            isSubmitting\n          }) => /*#__PURE__*/_jsxDEV(\"form\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                placeholder: \"User\",\n                label: \"\\u0418\\u043C\\u044F\",\n                variant: \"outlined\",\n                type: \"name\",\n                name: \"name\",\n                error: errors.name && touched.name,\n                errorText: touched.name && errors.name,\n                onBlur: () => setFieldTouched('name', true, false),\n                value: values.name,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                placeholder: \"example.mail@gmail.com\",\n                label: \"\\u041F\\u043E\\u0447\\u0442\\u0430\",\n                variant: \"outlined\",\n                type: \"email\",\n                name: \"email\",\n                error: errors.email && touched.email,\n                errorText: touched.email && errors.email,\n                onBlur: () => setFieldTouched('email', true, false),\n                value: values.email,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                placeholder: \"+380934343444\",\n                label: \"\\u041D\\u043E\\u043C\\u0435\\u0440 \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430\",\n                variant: \"outlined\",\n                type: \"phone\",\n                name: \"phone\",\n                error: errors.phone && touched.phone,\n                errorText: touched.phone && errors.phone,\n                onBlur: () => setFieldTouched('phone', true, false),\n                value: values.phone,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                placeholder: \"123456789\",\n                label: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n                variant: \"outlined\",\n                type: \"password\",\n                name: \"password\",\n                error: errors.password && touched.password,\n                errorText: touched.password && errors.password,\n                onBlur: () => setFieldTouched('password', true, false),\n                value: values.password,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group form-check\",\n              style: {\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center'\n              },\n              children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                className: \"my-4 text-left\",\n                control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  className: \"me-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 30\n                }, this),\n                label: \" \\u042F \\u043F\\u0440\\u0438\\u043D\\u0438\\u043C\\u0430\\u044E \\u0443\\u0441\\u043B\\u043E\\u0432\\u0438\\u044F \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u043D\\u0438\\u044F \\u0438 \\u043A\\u043E\\u043D\\u0444\\u0438\\u0434\\u0435\\u043D\\u0446\\u0438\\u0430\\u043B\\u044C\\u043D\\u043E\\u0441\\u0442\\u0438\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              color: \"primary\",\n              variant: \"contained\",\n              className: \"btn-prime\" // disabled={isSubmitting || isLoadingAuth}\n              ,\n              onClick: e => handleSubmit2(e),\n              children: \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0435\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_c = RegisterPage;\nexport default RegisterPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"sources":["/Users/oksanashukh/Desktop/INFOCOIN/infoCoin-frontend/src/pages/RegisterPage/index.js"],"names":["React","Button","FormControlLabel","Checkbox","Input","SignupSchema","Formik","signUpAPI","RegisterPage","isLoadingAuth","registerAction","pendingAction","addNotificationAction","registerUser","values","email","password","name","phone","actions","catch","error","console","log","JSON","stringify","setErrors","setFieldTouched","errors","touched","handleChange","handleSubmit","isSubmitting","display","justifyContent","alignItems","e","handleSubmit2"],"mappings":"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","sourcesContent":["/* eslint-disable react/jsx-no-target-blank */\n// import React, {useState} from \"react\";\nimport React from 'react';\n// import {Link, useHistory} from \"react-router-dom\";\nimport { Button } from '@material-ui/core';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Input from '@components/Form/Input';\nimport SignupSchema from '@helpers/Formik/validation';\nimport Formik from '@helpers/Formik';\n\nimport { signUpAPI } from '@services/api/auth';\n// import PrivacyPopup from \"@containers/PrivacyPopup/PrivacyPopup\";\n\nconst RegisterPage = ({\n  isLoadingAuth,\n  registerAction,\n  pendingAction,\n  addNotificationAction,\n}) => {\n  const registerUser = (values) => {\n    return signUpAPI(values);\n  };\n\n  return (\n    <React.Fragment>\n      {/* {isPrivacyOpened && (\n                <PrivacyPopup togglePrivacyPolicy={() => setPrivacyOpened((p) => !p)}/>\n            )} */}\n      <div>\n        <div>\n          <Formik\n            initialValues={{\n              email: '',\n              password: '',\n              name: '',\n              phone: '',\n            }}\n            validationSchema={SignupSchema}\n            onSubmit={(values, actions) => {\n              registerUser(values).catch((error) => {\n                console.log(JSON.stringify(error));\n                actions.setErrors({\n                  email: \" \",\n                  password: \" \",\n                  name: \" \",\n                  phone: \" \",\n                });\n             \n              });\n            }}\n          >\n            {({\n              setFieldTouched,\n              values,\n              errors,\n              touched,\n              handleChange,\n              handleSubmit,\n              isSubmitting,\n            }) => (\n              <form>\n                <div>\n                  <Input\n                    placeholder=\"User\"\n                    label=\"Имя\"\n                    variant=\"outlined\"\n                    type=\"name\"\n                    name=\"name\"\n                    error={errors.name && touched.name}\n                    errorText={touched.name && errors.name}\n                    onBlur={() => setFieldTouched('name', true, false)}\n                    value={values.name}\n                    onChange={handleChange}\n                  />\n                </div>\n                <div>\n                  <Input\n                    placeholder=\"example.mail@gmail.com\"\n                    label=\"Почта\"\n                    variant=\"outlined\"\n                    type=\"email\"\n                    name=\"email\"\n                    error={errors.email && touched.email}\n                    errorText={touched.email && errors.email}\n                    onBlur={() => setFieldTouched('email', true, false)}\n                    value={values.email}\n                    onChange={handleChange}\n                  />\n                  <Input\n                    placeholder=\"+380934343444\"\n                    label=\"Номер телефона\"\n                    variant=\"outlined\"\n                    type=\"phone\"\n                    name=\"phone\"\n                    error={errors.phone && touched.phone}\n                    errorText={touched.phone && errors.phone}\n                    onBlur={() => setFieldTouched('phone', true, false)}\n                    value={values.phone}\n                    onChange={handleChange}\n                  />\n                </div>\n                <div>\n                  <Input\n                    placeholder=\"123456789\"\n                    label=\"Пароль\"\n                    variant=\"outlined\"\n                    type=\"password\"\n                    name=\"password\"\n                    error={errors.password && touched.password}\n                    errorText={touched.password && errors.password}\n                    onBlur={() => setFieldTouched('password', true, false)}\n                    value={values.password}\n                    onChange={handleChange}\n                  />\n                  {/* <Input\n                                       placeholder=\"123456789\"\n                                        label=\"confirm password\"\n                                        variant=\"outlined\"\n                                        type=\"password\"\n                                        name=\"confirmPassword\"\n                                        error={errors.confirmPassword && touched.confirmPassword}\n                                        errorText={\n                                            touched.confirmPassword && errors.confirmPassword\n                                        }\n                                        onBlur={() =>\n                                            setFieldTouched(\"confirmPassword\", true, false)\n                                        }\n                                        value={values.confirmPassword}\n                                        onChange={handleChange}\n                                    /> */}\n                </div>\n\n                <div\n                  className=\"form-group form-check\"\n                  style={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                  }}\n                >\n                  <FormControlLabel\n                    className=\"my-4 text-left\"\n                    control={<Checkbox className=\"me-2\" />}\n                    label=\" Я принимаю условия пользования и конфиденциальности\"\n                  />\n                </div>\n                {/* {!checkboxValue ? (<span style={{ display: 'flex', color: 'red', justifyContent: 'center', fontSize: '14px'}}>Accept terms of use</span>) : null} */}\n                <Button\n                  type=\"submit\"\n                  color=\"primary\"\n                  variant=\"contained\"\n                  className=\"btn-prime\"\n                  // disabled={isSubmitting || isLoadingAuth}\n                  onClick={e => handleSubmit2(e)}\n                >\n                  Зарегестрироваться\n                </Button>\n              </form>\n            )}\n          </Formik>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default RegisterPage;\n"]},"metadata":{},"sourceType":"module"}