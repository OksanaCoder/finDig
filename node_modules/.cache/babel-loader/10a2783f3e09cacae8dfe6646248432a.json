{"ast":null,"code":"var _jsxFileName = \"/Users/oksanashukh/Desktop/INFOCOIN/app/src/pages/RegisterPage/index.js\";\n\n/* eslint-disable react/jsx-no-target-blank */\nimport React, { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Button } from \"@material-ui/core\";\nimport Input from \"@components/Form/Input\";\nimport SignupSchema from \"@helpers/Formik/validation\";\nimport Formik from \"@helpers/Formik\";\nimport { Field } from \"formik\"; // import PrivacyPopup from \"@containers/PrivacyPopup/PrivacyPopup\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegisterPage = ({\n  isLoadingAuth,\n  registerAction,\n  pendingAction,\n  addNotificationAction\n}) => {\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            email: \"\",\n            password: \"\",\n            confirmPassword: \"\",\n            firstName: \"\",\n            lastName: \"\",\n            phone: \"\"\n          },\n          validationSchema: SignupSchema // onSubmit={(values, actions) => {\n          //     handleSubmit2(values).catch((error) => {\n          //         console.log(JSON.stringify(error));\n          //         actions.setErrors({\n          //             email: \" \",\n          //             password: \" \",\n          //             confirmPassword: \" \",\n          //             firstName: \" \",\n          //             lastName: \" \",\n          //             phone: \" \",\n          //         });\n          //         if (error?.notification) {\n          //             addNotificationAction({type: \"error\", text: error.message});\n          //             return\n          //         }\n          //         console.log(error)\n          //     });\n          // }}\n          ,\n          children: ({\n            setFieldTouched,\n            values,\n            errors,\n            touched,\n            handleChange,\n            handleSubmit,\n            isSubmitting\n          }) => /*#__PURE__*/_jsxDEV(\"form\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                label: \"\\u0418\\u043C\\u044F\",\n                variant: \"outlined\",\n                type: \"name\",\n                name: \"name\",\n                error: errors.name && touched.name,\n                errorText: touched.name && errors.name,\n                onBlur: () => setFieldTouched(\"name\", true, false),\n                value: values.name,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                label: \"email\",\n                variant: \"outlined\",\n                type: \"email\",\n                name: \"email\",\n                error: errors.email && touched.email,\n                errorText: touched.email && errors.email,\n                onBlur: () => setFieldTouched(\"email\", true, false),\n                value: values.email,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                label: \"Phone number\",\n                variant: \"outlined\",\n                type: \"phone\",\n                name: \"phone\",\n                error: errors.phone && touched.phone,\n                errorText: touched.phone && errors.phone,\n                onBlur: () => setFieldTouched(\"phone\", true, false),\n                value: values.phone,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                label: \"password\",\n                variant: \"outlined\",\n                type: \"password\",\n                name: \"password\",\n                error: errors.password && touched.password,\n                errorText: touched.password && errors.password,\n                onBlur: () => setFieldTouched(\"password\", true, false),\n                value: values.password,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                label: \"confirm password\",\n                variant: \"outlined\",\n                type: \"password\",\n                name: \"confirmPassword\",\n                error: errors.confirmPassword && touched.confirmPassword,\n                errorText: touched.confirmPassword && errors.confirmPassword,\n                onBlur: () => setFieldTouched(\"confirmPassword\", true, false),\n                value: values.confirmPassword,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              color: \"primary\",\n              variant: \"contained\" // disabled={isSubmitting || isLoadingAuth}\n              ,\n              onClick: handleSubmit,\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_c = RegisterPage;\nexport default RegisterPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"sources":["/Users/oksanashukh/Desktop/INFOCOIN/app/src/pages/RegisterPage/index.js"],"names":["React","useState","Link","useHistory","Button","Input","SignupSchema","Formik","Field","RegisterPage","isLoadingAuth","registerAction","pendingAction","addNotificationAction","email","password","confirmPassword","firstName","lastName","phone","setFieldTouched","values","errors","touched","handleChange","handleSubmit","isSubmitting","name"],"mappings":"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","sourcesContent":["/* eslint-disable react/jsx-no-target-blank */\nimport React, {useState} from \"react\";\nimport {Link, useHistory} from \"react-router-dom\";\nimport {Button} from \"@material-ui/core\";\nimport Input from \"@components/Form/Input\";\nimport SignupSchema from \"@helpers/Formik/validation\";\nimport Formik from \"@helpers/Formik\";\nimport {Field} from \"formik\";\n// import PrivacyPopup from \"@containers/PrivacyPopup/PrivacyPopup\";\n\n\nconst RegisterPage = ({\n                              isLoadingAuth,\n                              registerAction,\n                              pendingAction,\n                              addNotificationAction,\n                          }) => {\n \n\n    return (\n        <React.Fragment>\n            {/* {isPrivacyOpened && (\n                <PrivacyPopup togglePrivacyPolicy={() => setPrivacyOpened((p) => !p)}/>\n            )} */}\n            <div>\n                <div>\n                  \n                    <Formik\n                        initialValues={{\n                            email: \"\",\n                            password: \"\",\n                            confirmPassword: \"\",\n                            firstName: \"\",\n                            lastName: \"\",\n                            phone: \"\",\n\n                        }}\n                        validationSchema={SignupSchema}\n                        // onSubmit={(values, actions) => {\n                        //     handleSubmit2(values).catch((error) => {\n                        //         console.log(JSON.stringify(error));\n                        //         actions.setErrors({\n                        //             email: \" \",\n                        //             password: \" \",\n                        //             confirmPassword: \" \",\n                        //             firstName: \" \",\n                        //             lastName: \" \",\n                        //             phone: \" \",\n                        //         });\n                        //         if (error?.notification) {\n                        //             addNotificationAction({type: \"error\", text: error.message});\n                        //             return\n                        //         }\n                        //         console.log(error)\n                        //     });\n                        // }}\n                    >\n                        {({\n                              setFieldTouched,\n                              values,\n                              errors,\n                              touched,\n                              handleChange,\n                              handleSubmit,\n                              isSubmitting,\n                          }) => (\n                            <form>\n                                <div>\n                                    <Input\n\n                               \n                                        label=\"Имя\"\n                                        variant=\"outlined\"\n                                        type=\"name\"\n                                        name=\"name\"\n                                        error={errors.name && touched.name}\n                                        errorText={touched.name && errors.name}\n                                        onBlur={() => setFieldTouched(\"name\", true, false)}\n                                        value={values.name}\n                                        onChange={handleChange}\n                                    />\n\n                                 \n                                </div>\n                                <div >\n                                    <Input\n                                        \n                                        label=\"email\"\n                                        variant=\"outlined\"\n                                        type=\"email\"\n                                        name=\"email\"\n                                        error={errors.email && touched.email}\n                                        errorText={touched.email && errors.email}\n                                        onBlur={() => setFieldTouched(\"email\", true, false)}\n                                        value={values.email}\n                                        onChange={handleChange}\n                                    />\n                                    <Input\n                                      \n                                        label=\"Phone number\"\n                                        variant=\"outlined\"\n                                        type=\"phone\"\n                                        name=\"phone\"\n                                        error={errors.phone && touched.phone}\n                                        errorText={touched.phone && errors.phone}\n                                        onBlur={() => setFieldTouched(\"phone\", true, false)}\n                                        value={values.phone}\n                                        onChange={handleChange}\n                                    />\n                                </div>\n                                <div>\n                                    <Input\n                                       \n                                        label=\"password\"\n                                        variant=\"outlined\"\n                                        type=\"password\"\n                                        name=\"password\"\n                                        error={errors.password && touched.password}\n                                        errorText={touched.password && errors.password}\n                                        onBlur={() => setFieldTouched(\"password\", true, false)}\n                                        value={values.password}\n                                        onChange={handleChange}\n                                    />\n                                    <Input\n                                 \n                                        label=\"confirm password\"\n                                        variant=\"outlined\"\n                                        type=\"password\"\n                                        name=\"confirmPassword\"\n                                        error={errors.confirmPassword && touched.confirmPassword}\n                                        errorText={\n                                            touched.confirmPassword && errors.confirmPassword\n                                        }\n                                        onBlur={() =>\n                                            setFieldTouched(\"confirmPassword\", true, false)\n                                        }\n                                        value={values.confirmPassword}\n                                        onChange={handleChange}\n                                    />\n                                </div>\n\n                                {/* <div\n                                    className=\"form-group form-check\"\n                                    style={{\n                                        display: \"flex\",\n                                        justifyContent: \"center\",\n                                        alignItems: \"center\",\n                                    }}\n                                >\n                                    <Field\n                                        type=\"checkbox\"\n                                        name=\"acceptTerms\"\n                                        style={{marginRight: \"10px\"}}\n                                        \n                                        error={errors.acceptTerms && touched.acceptTerms}\n                                        errorText={\n                                            touched.acceptTerms && errors.acceptTerms\n\n                                        }\n                                         */}\n                                    {/* /> */}\n                                    {/* <p className={css.auth__policy}>\n                                        {t(\"privacy_first\")} <br/>\n                                        <p\n                                            className={css.auth__privicyLink}\n                                            onClick={() => setPrivacyOpened(true)}\n                                        >\n                                            {t(\"privacy_second\")}\n                                        </p>\n                                    </p> */}\n\n\n                                {/* </div> */}\n                                {/* {!checkboxValue ? (<span style={{ display: 'flex', color: 'red', justifyContent: 'center', fontSize: '14px'}}>Accept terms of use</span>) : null} */}\n                                <Button\n                                    type=\"submit\"\n                                    color=\"primary\"\n                                    variant=\"contained\"\n                                  \n                                    // disabled={isSubmitting || isLoadingAuth}\n                                    onClick={handleSubmit}\n                                >\n                                    Register\n                                </Button>\n                            </form>\n                        )}\n                    </Formik>\n                </div>\n            </div>\n        </React.Fragment>\n    );\n};\n\n\nexport default RegisterPage"]},"metadata":{},"sourceType":"module"}