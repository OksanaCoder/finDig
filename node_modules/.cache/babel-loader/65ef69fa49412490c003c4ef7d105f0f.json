{"ast":null,"code":"var _jsxFileName = \"/Users/oksanashukh/Desktop/INFOCOIN/app/src/pages/RegisterPage/index.js\";\n\n/* eslint-disable react/jsx-no-target-blank */\nimport React, { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Button } from \"@material-ui/core\";\nimport Input from \"@components/Form/Input\";\nimport SignupSchema from \"@helpers/Formik/validation\";\nimport Formik from \"@helpers/Formik\";\nimport { Field } from \"formik\"; // import PrivacyPopup from \"@containers/PrivacyPopup/PrivacyPopup\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegisterPage = ({\n  isLoadingAuth,\n  registerAction,\n  pendingAction,\n  addNotificationAction\n}) => {\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Registration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Registerd\", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/login\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 34\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            email: \"\",\n            password: \"\",\n            confirmPassword: \"\",\n            firstName: \"\",\n            lastName: \"\",\n            phone: \"\"\n          },\n          validationSchema: SignupSchema // onSubmit={(values, actions) => {\n          //     handleSubmit2(values).catch((error) => {\n          //         console.log(JSON.stringify(error));\n          //         actions.setErrors({\n          //             email: \" \",\n          //             password: \" \",\n          //             confirmPassword: \" \",\n          //             firstName: \" \",\n          //             lastName: \" \",\n          //             phone: \" \",\n          //         });\n          //         if (error?.notification) {\n          //             addNotificationAction({type: \"error\", text: error.message});\n          //             return\n          //         }\n          //         console.log(error)\n          //     });\n          // }}\n          ,\n          children: ({\n            setFieldTouched,\n            values,\n            errors,\n            touched,\n            handleChange,\n            handleSubmit,\n            isSubmitting\n          }) => /*#__PURE__*/_jsxDEV(\"form\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                label: \"First Name\",\n                variant: \"outlined\",\n                type: \"firstName\",\n                name: \"firstName\",\n                error: errors.firstName && touched.firstName,\n                errorText: touched.firstName && errors.firstName,\n                onBlur: () => setFieldTouched(\"firstName\", true, false),\n                value: values.firstName,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                label: \"LastName\",\n                variant: \"outlined\",\n                type: \"lastName\",\n                name: \"lastName\",\n                error: errors.lastName && touched.lastName,\n                errorText: touched.lastName && errors.lastName,\n                onBlur: () => setFieldTouched(\"lastName\", true, false),\n                value: values.lastName,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                label: \"email\",\n                variant: \"outlined\",\n                type: \"email\",\n                name: \"email\",\n                error: errors.email && touched.email,\n                errorText: touched.email && errors.email,\n                onBlur: () => setFieldTouched(\"email\", true, false),\n                value: values.email,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                label: \"Phone number\",\n                variant: \"outlined\",\n                type: \"phone\",\n                name: \"phone\",\n                error: errors.phone && touched.phone,\n                errorText: touched.phone && errors.phone,\n                onBlur: () => setFieldTouched(\"phone\", true, false),\n                value: values.phone,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: css.flexBetween,\n              children: [/*#__PURE__*/_jsxDEV(Input // style={{ marginRight: \"20px\" }}\n              , {\n                className: css.auth__form_registerInput,\n                label: t(\"password\"),\n                variant: \"outlined\",\n                type: \"password\",\n                name: \"password\",\n                error: errors.password && touched.password,\n                errorText: touched.password && errors.password,\n                onBlur: () => setFieldTouched(\"password\", true, false),\n                value: values.password,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                className: cx([css.auth__form_registerInput, css.auth__form_input_leftP, css.auth__form_paddRight]),\n                label: t(\"password_confirm\"),\n                variant: \"outlined\",\n                type: \"password\",\n                name: \"confirmPassword\",\n                error: errors.confirmPassword && touched.confirmPassword,\n                errorText: touched.confirmPassword && errors.confirmPassword,\n                onBlur: () => setFieldTouched(\"confirmPassword\", true, false),\n                value: values.confirmPassword,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group form-check\",\n              style: {\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Field, {\n                type: \"checkbox\",\n                name: \"acceptTerms\",\n                style: {\n                  marginRight: \"10px\"\n                } // error={errors.acceptTerms && touched.acceptTerms}\n                // errorText={touched.acceptTerms && errors.acceptTerms}\n                ,\n                error: errors.acceptTerms && touched.acceptTerms,\n                errorText: touched.acceptTerms && errors.acceptTerms // checked={checkboxValue}\n                // onChange={() => console.log(setCheckboxValue(!checkboxValue))}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: css.auth__policy,\n                children: [t(\"privacy_first\"), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 62\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: css.auth__privicyLink,\n                  onClick: () => setPrivacyOpened(true),\n                  children: t(\"privacy_second\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              color: \"primary\",\n              variant: \"contained\",\n              className: css.auth__button // disabled={isSubmitting || isLoadingAuth}\n              ,\n              onClick: handleSubmit,\n              children: t(\"register\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_c = RegisterPage;\nexport default RegisterPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"sources":["/Users/oksanashukh/Desktop/INFOCOIN/app/src/pages/RegisterPage/index.js"],"names":["React","useState","Link","useHistory","Button","Input","SignupSchema","Formik","Field","RegisterPage","isLoadingAuth","registerAction","pendingAction","addNotificationAction","email","password","confirmPassword","firstName","lastName","phone","setFieldTouched","values","errors","touched","handleChange","handleSubmit","isSubmitting","css","flexBetween","auth__form_registerInput","t","cx","auth__form_input_leftP","auth__form_paddRight","display","justifyContent","alignItems","marginRight","acceptTerms","auth__policy","auth__privicyLink","setPrivacyOpened","auth__button"],"mappings":"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","sourcesContent":["/* eslint-disable react/jsx-no-target-blank */\nimport React, {useState} from \"react\";\nimport {Link, useHistory} from \"react-router-dom\";\nimport {Button} from \"@material-ui/core\";\nimport Input from \"@components/Form/Input\";\nimport SignupSchema from \"@helpers/Formik/validation\";\nimport Formik from \"@helpers/Formik\";\nimport {Field} from \"formik\";\n// import PrivacyPopup from \"@containers/PrivacyPopup/PrivacyPopup\";\n\n\nconst RegisterPage = ({\n                              isLoadingAuth,\n                              registerAction,\n                              pendingAction,\n                              addNotificationAction,\n                          }) => {\n \n\n    return (\n        <React.Fragment>\n            {/* {isPrivacyOpened && (\n                <PrivacyPopup togglePrivacyPolicy={() => setPrivacyOpened((p) => !p)}/>\n            )} */}\n            <div>\n                <div>\n                    <h2>Registration</h2>\n                    <h3>\n                        Registerd<Link to=\"/login\">Login</Link>\n                    </h3>\n                    <Formik\n                        initialValues={{\n                            email: \"\",\n                            password: \"\",\n                            confirmPassword: \"\",\n                            firstName: \"\",\n                            lastName: \"\",\n                            phone: \"\",\n\n                        }}\n                        validationSchema={SignupSchema}\n                        // onSubmit={(values, actions) => {\n                        //     handleSubmit2(values).catch((error) => {\n                        //         console.log(JSON.stringify(error));\n                        //         actions.setErrors({\n                        //             email: \" \",\n                        //             password: \" \",\n                        //             confirmPassword: \" \",\n                        //             firstName: \" \",\n                        //             lastName: \" \",\n                        //             phone: \" \",\n                        //         });\n                        //         if (error?.notification) {\n                        //             addNotificationAction({type: \"error\", text: error.message});\n                        //             return\n                        //         }\n                        //         console.log(error)\n                        //     });\n                        // }}\n                    >\n                        {({\n                              setFieldTouched,\n                              values,\n                              errors,\n                              touched,\n                              handleChange,\n                              handleSubmit,\n                              isSubmitting,\n                          }) => (\n                            <form>\n                                <div>\n                                    <Input\n\n                               \n                                        label=\"First Name\"\n                                        variant=\"outlined\"\n                                        type=\"firstName\"\n                                        name=\"firstName\"\n                                        error={errors.firstName && touched.firstName}\n                                        errorText={touched.firstName && errors.firstName}\n                                        onBlur={() => setFieldTouched(\"firstName\", true, false)}\n                                        value={values.firstName}\n                                        onChange={handleChange}\n                                    />\n\n                                    <Input\n                                       \n                                        label=\"LastName\"\n                                        variant=\"outlined\"\n                                        type=\"lastName\"\n                                        name=\"lastName\"\n                                        error={errors.lastName && touched.lastName}\n                                        errorText={touched.lastName && errors.lastName}\n                                        onBlur={() => setFieldTouched(\"lastName\", true, false)}\n                                        value={values.lastName}\n                                        onChange={handleChange}\n                                    />\n                                </div>\n                                <div >\n                                    <Input\n                                        \n                                        label=\"email\"\n                                        variant=\"outlined\"\n                                        type=\"email\"\n                                        name=\"email\"\n                                        error={errors.email && touched.email}\n                                        errorText={touched.email && errors.email}\n                                        onBlur={() => setFieldTouched(\"email\", true, false)}\n                                        value={values.email}\n                                        onChange={handleChange}\n                                    />\n                                    <Input\n                                      \n                                        label=\"Phone number\"\n                                        variant=\"outlined\"\n                                        type=\"phone\"\n                                        name=\"phone\"\n                                        error={errors.phone && touched.phone}\n                                        errorText={touched.phone && errors.phone}\n                                        onBlur={() => setFieldTouched(\"phone\", true, false)}\n                                        value={values.phone}\n                                        onChange={handleChange}\n                                    />\n                                </div>\n                                <div className={css.flexBetween}>\n                                    <Input\n                                        // style={{ marginRight: \"20px\" }}\n                                        className={css.auth__form_registerInput}\n                                        label={t(\"password\")}\n                                        variant=\"outlined\"\n                                        type=\"password\"\n                                        name=\"password\"\n                                        error={errors.password && touched.password}\n                                        errorText={touched.password && errors.password}\n                                        onBlur={() => setFieldTouched(\"password\", true, false)}\n                                        value={values.password}\n                                        onChange={handleChange}\n                                    />\n                                    <Input\n                                        className={cx([\n                                            css.auth__form_registerInput,\n                                            css.auth__form_input_leftP,\n                                            css.auth__form_paddRight,\n                                        ])}\n                                        label={t(\"password_confirm\")}\n                                        variant=\"outlined\"\n                                        type=\"password\"\n                                        name=\"confirmPassword\"\n                                        error={errors.confirmPassword && touched.confirmPassword}\n                                        errorText={\n                                            touched.confirmPassword && errors.confirmPassword\n                                        }\n                                        onBlur={() =>\n                                            setFieldTouched(\"confirmPassword\", true, false)\n                                        }\n                                        value={values.confirmPassword}\n                                        onChange={handleChange}\n                                    />\n                                </div>\n\n                                <div\n                                    className=\"form-group form-check\"\n                                    style={{\n                                        display: \"flex\",\n                                        justifyContent: \"center\",\n                                        alignItems: \"center\",\n                                    }}\n                                >\n                                    <Field\n                                        type=\"checkbox\"\n                                        name=\"acceptTerms\"\n                                        style={{marginRight: \"10px\"}}\n                                        // error={errors.acceptTerms && touched.acceptTerms}\n                                        // errorText={touched.acceptTerms && errors.acceptTerms}\n                                        error={errors.acceptTerms && touched.acceptTerms}\n                                        errorText={\n                                            touched.acceptTerms && errors.acceptTerms\n\n                                        }\n                                        // checked={checkboxValue}\n                                        // onChange={() => console.log(setCheckboxValue(!checkboxValue))}\n                                    />\n                                    <p className={css.auth__policy}>\n                                        {t(\"privacy_first\")} <br/>\n                                        <p\n                                            className={css.auth__privicyLink}\n                                            onClick={() => setPrivacyOpened(true)}\n                                        >\n                                            {t(\"privacy_second\")}\n                                        </p>\n                                    </p>\n\n\n                                </div>\n                                {/* {!checkboxValue ? (<span style={{ display: 'flex', color: 'red', justifyContent: 'center', fontSize: '14px'}}>Accept terms of use</span>) : null} */}\n                                <Button\n                                    type=\"submit\"\n                                    color=\"primary\"\n                                    variant=\"contained\"\n                                    className={css.auth__button}\n                                    // disabled={isSubmitting || isLoadingAuth}\n                                    onClick={handleSubmit}\n                                >\n                                    {t(\"register\")}\n                                </Button>\n                            </form>\n                        )}\n                    </Formik>\n                </div>\n            </div>\n        </React.Fragment>\n    );\n};\n\n\nexport default RegisterPage"]},"metadata":{},"sourceType":"module"}