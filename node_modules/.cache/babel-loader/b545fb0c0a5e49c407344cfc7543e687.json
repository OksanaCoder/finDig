{"ast":null,"code":"var _jsxFileName = \"/Users/oksanashukh/Desktop/INFOCOIN/infoCoin-frontend/src/components/Security/Security.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport { Container, Row, InputGroup, FormControl } from 'react-bootstrap';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport 'react-perfect-scrollbar/dist/css/styles.css';\nimport { ReactComponent as ArrowDown } from \"@svgr/webpack?-svgo,+titleProp,+ref!@assets/icons/arrow-down.svg\";\nimport arrowLong from \"@assets/icons/arrow-r-long.svg\";\nimport '@styles/components/Security.css';\nimport { devices, addresses } from './device-list';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Security = () => {\n  _s();\n\n  const devicesArrow = useRef();\n  const addressesArrow = useRef();\n  const [isOpenDevicesList, setIsOpenDevicesList] = useState(false);\n  const [isOpenAddressesList, setIsOpenAddressesList] = useState(false);\n\n  const handlerScroll = evt => {\n    const {\n      id\n    } = evt.target;\n    id === 'devicesArrow' && devicesArrow.current.id === 'devicesArrow' && setIsOpenDevicesList(!isOpenDevicesList);\n    id === 'addressesArrow' && addressesArrow.current.id === 'addressesArrow' && setIsOpenAddressesList(!isOpenAddressesList);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"m-mob\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"devices-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"devices-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"devices-list-header\",\n            children: \"\\u0412\\u0430\\u0448\\u0438 \\u0443\\u0441\\u0442\\u0440\\u043E\\u0439\\u0441\\u0442\\u0432\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(PerfectScrollbar, {\n            className: \"devices-list-scroll\",\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: `${!isOpenDevicesList ? 'devices-list-container' : 'devices-list-container-open'}`,\n              children: devices && devices.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"devices-list-item\",\n                children: item.device\n              }, item.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ArrowDown, {\n            onClick: handlerScroll,\n            className: `${!isOpenDevicesList ? 'devices-arrow' : 'devices-arrow-rotate'}`,\n            ref: devicesArrow,\n            id: \"devicesArrow\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"devices-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"devices-list-header\",\n            children: \"\\u0412\\u0445\\u043E\\u0434\\u044B \\u0441 \\u0443\\u0441\\u0442\\u0440\\u043E\\u0439\\u0441\\u0442\\u0432\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(PerfectScrollbar, {\n            className: \"devices-list-scroll\",\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: `${!isOpenAddressesList ? 'devices-list-container' : 'devices-list-container-open'}`,\n              children: addresses && addresses.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"devices-list-item\",\n                children: item.address\n              }, item.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ArrowDown, {\n            onClick: handlerScroll,\n            className: `${!isOpenAddressesList ? 'devices-arrow' : 'devices-arrow-rotate'}`,\n            ref: addressesArrow,\n            id: \"addressesArrow\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"my-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          children: \"\\u0414\\u0432\\u0443\\u0445\\u044D\\u0442\\u0430\\u043F\\u043D\\u0430\\u044F \\u0432\\u0435\\u0440\\u0438\\u0444\\u0438\\u043A\\u0430\\u0446\\u0438\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"description\",\n          children: \"\\u0414\\u0432\\u0443\\u0445\\u044D\\u0442\\u0430\\u043F\\u043D\\u0430\\u044F \\u0432\\u0435\\u0440\\u0438\\u0444\\u0438\\u043A\\u0430\\u0446\\u0438\\u044F \\u0432\\u044B\\u043F\\u043E\\u043B\\u043D\\u044F\\u0435\\u0442\\u0441\\u044F \\u043F\\u043E \\u043D\\u043E\\u043C\\u0435\\u0440\\u0443 \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            placeholder: \"+380123456789\",\n            \"aria-label\": \"Recipient's username\",\n            \"aria-describedby\": \"basic-addon2\",\n            className: \"borderBlack\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n            id: \"basic-addon2\",\n            className: \"btn-arrow\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: arrowLong,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Security, \"+e21MPWNqIYfX1AUIchUgH6+ef4=\");\n\n_c = Security;\nexport default Security;\n\nvar _c;\n\n$RefreshReg$(_c, \"Security\");","map":{"version":3,"sources":["/Users/oksanashukh/Desktop/INFOCOIN/infoCoin-frontend/src/components/Security/Security.js"],"names":["React","useRef","useState","Container","Row","InputGroup","FormControl","PerfectScrollbar","devices","addresses","Security","devicesArrow","addressesArrow","isOpenDevicesList","setIsOpenDevicesList","isOpenAddressesList","setIsOpenAddressesList","handlerScroll","evt","id","target","current","map","item","device","address","arrowLong"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react';\nimport { Container, Row, InputGroup, FormControl } from 'react-bootstrap';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport 'react-perfect-scrollbar/dist/css/styles.css';\nimport { ReactComponent as ArrowDown } from '@assets/icons/arrow-down.svg';\nimport arrowLong from '@assets/icons/arrow-r-long.svg';\nimport '@styles/components/Security.css';\nimport { devices, addresses } from './device-list';\n\nconst Security = () => {\n  const devicesArrow = useRef();\n  const addressesArrow = useRef();\n  const [isOpenDevicesList, setIsOpenDevicesList] = useState(false);\n  const [isOpenAddressesList, setIsOpenAddressesList] = useState(false);\n\n  const handlerScroll = evt => {\n    const { id } = evt.target;\n    id === 'devicesArrow' &&\n      devicesArrow.current.id === 'devicesArrow' &&\n      setIsOpenDevicesList(!isOpenDevicesList);\n\n    id === 'addressesArrow' &&\n      addressesArrow.current.id === 'addressesArrow' &&\n      setIsOpenAddressesList(!isOpenAddressesList);\n  };\n\n  return (\n    <>\n      <Container className=\"m-mob\">\n        <div className=\"devices-wrapper\">\n          <div className=\"devices-list\">\n            <h6 className=\"devices-list-header\">Ваши устройства</h6>\n            <PerfectScrollbar className=\"devices-list-scroll\">\n              <ul\n                className={`${\n                  !isOpenDevicesList\n                    ? 'devices-list-container'\n                    : 'devices-list-container-open'\n                }`}\n              >\n                {devices &&\n                  devices.map(item => (\n                    <li className=\"devices-list-item\" key={item.id}>\n                      {item.device}\n                    </li>\n                  ))}\n              </ul>\n            </PerfectScrollbar>\n            <ArrowDown\n              onClick={handlerScroll}\n              className={`${\n                !isOpenDevicesList ? 'devices-arrow' : 'devices-arrow-rotate'\n              }`}\n              ref={devicesArrow}\n              id=\"devicesArrow\"\n            />\n          </div>\n\n          <div className=\"devices-list\">\n            <h6 className=\"devices-list-header\">Входы с устройств</h6>\n            <PerfectScrollbar className=\"devices-list-scroll\">\n              <ul\n                className={`${\n                  !isOpenAddressesList\n                    ? 'devices-list-container'\n                    : 'devices-list-container-open'\n                }`}\n              >\n                {addresses &&\n                  addresses.map(item => (\n                    <li className=\"devices-list-item\" key={item.id}>\n                      {item.address}\n                    </li>\n                  ))}\n              </ul>\n            </PerfectScrollbar>\n            <ArrowDown\n              onClick={handlerScroll}\n              className={`${\n                !isOpenAddressesList ? 'devices-arrow' : 'devices-arrow-rotate'\n              }`}\n              ref={addressesArrow}\n              id=\"addressesArrow\"\n            />\n          </div>\n        </div>\n\n        <Row className=\"my-5\">\n          <h6>Двухэтапная верификация</h6>\n          <p className=\"description\">\n            Двухэтапная верификация выполняется по номеру телефона\n          </p>\n          <InputGroup className=\"mb-3\">\n            <FormControl\n              placeholder=\"+380123456789\"\n              aria-label=\"Recipient's username\"\n              aria-describedby=\"basic-addon2\"\n              className=\"borderBlack\"\n            />\n            <InputGroup.Text id=\"basic-addon2\" className=\"btn-arrow\">\n              <img src={arrowLong} alt=\"\" />\n            </InputGroup.Text>\n          </InputGroup>\n        </Row>\n      </Container>\n    </>\n  );\n};\n\nexport default Security;\n"]},"metadata":{},"sourceType":"module"}