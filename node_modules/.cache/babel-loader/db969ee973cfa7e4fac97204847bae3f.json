{"ast":null,"code":"var _jsxFileName = \"/Users/oksanashukh/Desktop/INFOCOIN/infoCoin-frontend/src/components/AppRouter/Layout.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport { Route, useLocation } from 'react-router-dom';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport HeaderContainer from '@containers/HeaderContainer/index.js'; // import { useSelector } from \"react-redux\";\n// import Loader from '@components/Loader'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const PublicRoute = ({\n  component: Components,\n  ...rest\n}) => {\n  // const authentificated = useSelector(state => state.authentificationReducer.isAuthentificated);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Route, { ...rest,\n      render: props => /*#__PURE__*/_jsxDEV(Components, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 41\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = PublicRoute;\nexport const PrivateRoute = ({\n  component: Components,\n  ...rest\n}) => {\n  _s();\n\n  let location = useLocation();\n  const timeout = {\n    enter: 800,\n    exit: 400\n  };\n\n  const getPathDepth = location => {\n    let pathArr = location.pathname.split('/');\n    pathArr = pathArr.filter(n => n !== '');\n    return pathArr.length;\n  };\n\n  const prevDepth = useRef(getPathDepth(location));\n  const nodeRef = useRef(null);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HeaderContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TransitionGroup, {\n      component: \"div\",\n      children: /*#__PURE__*/_jsxDEV(CSSTransition, {\n        classNames: \"pageSlider\",\n        timeout: timeout,\n        mountOnEnter: false,\n        unmountOnExit: true,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: nodeRef,\n          className: getPathDepth(location) - prevDepth.current >= 0 ? 'left' : 'right',\n          children: /*#__PURE__*/_jsxDEV(Route, { ...rest,\n            render: props => /*#__PURE__*/_jsxDEV(Components, { ...props\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 47\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, location.pathname, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(PrivateRoute, \"bhOtIr47S6To147DrPOCE3ouI60=\", false, function () {\n  return [useLocation];\n});\n\n_c2 = PrivateRoute;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PublicRoute\");\n$RefreshReg$(_c2, \"PrivateRoute\");","map":{"version":3,"sources":["/Users/oksanashukh/Desktop/INFOCOIN/infoCoin-frontend/src/components/AppRouter/Layout.js"],"names":["React","useRef","Route","useLocation","TransitionGroup","CSSTransition","HeaderContainer","PublicRoute","component","Components","rest","props","PrivateRoute","location","timeout","enter","exit","getPathDepth","pathArr","pathname","split","filter","n","length","prevDepth","nodeRef","current"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,SAASC,KAAT,EAAgBC,WAAhB,QAAmC,kBAAnC;AACA,SAASC,eAAT,EAA0BC,aAA1B,QAA+C,wBAA/C;AACA,OAAOC,eAAP,MAA4B,sCAA5B,C,CACA;AACA;;;;AAEA,OAAO,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,UAAb;AAAyB,KAAGC;AAA5B,CAAD,KAAwC;AACjE;AACA,sBACE;AAAA,2BACE,QAAC,KAAD,OAAWA,IAAX;AAAiB,MAAA,MAAM,EAAEC,KAAK,iBAAI,QAAC,UAAD,OAAgBA;AAAhB;AAAA;AAAA;AAAA;AAAA;AAAlC;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAKD,CAPM;KAAMJ,W;AAQb,OAAO,MAAMK,YAAY,GAAG,CAAC;AAAEJ,EAAAA,SAAS,EAAEC,UAAb;AAAyB,KAAGC;AAA5B,CAAD,KAAwC;AAAA;;AAClE,MAAIG,QAAQ,GAAGV,WAAW,EAA1B;AACA,QAAMW,OAAO,GAAG;AAAEC,IAAAA,KAAK,EAAE,GAAT;AAAcC,IAAAA,IAAI,EAAE;AAApB,GAAhB;;AAEA,QAAMC,YAAY,GAAGJ,QAAQ,IAAI;AAC/B,QAAIK,OAAO,GAAGL,QAAQ,CAACM,QAAT,CAAkBC,KAAlB,CAAwB,GAAxB,CAAd;AACAF,IAAAA,OAAO,GAAGA,OAAO,CAACG,MAAR,CAAeC,CAAC,IAAIA,CAAC,KAAK,EAA1B,CAAV;AACA,WAAOJ,OAAO,CAACK,MAAf;AACD,GAJD;;AAMA,QAAMC,SAAS,GAAGvB,MAAM,CAACgB,YAAY,CAACJ,QAAD,CAAb,CAAxB;AACA,QAAMY,OAAO,GAAGxB,MAAM,CAAC,IAAD,CAAtB;AACA,sBACE;AAAA,4BACE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,eAAD;AAAiB,MAAA,SAAS,EAAC,KAA3B;AAAA,6BACE,QAAC,aAAD;AAEE,QAAA,UAAU,EAAC,YAFb;AAGE,QAAA,OAAO,EAAEa,OAHX;AAIE,QAAA,YAAY,EAAE,KAJhB;AAKE,QAAA,aAAa,EAAE,IALjB;AAAA,+BAOE;AACE,UAAA,GAAG,EAAEW,OADP;AAEE,UAAA,SAAS,EACPR,YAAY,CAACJ,QAAD,CAAZ,GAAyBW,SAAS,CAACE,OAAnC,IAA8C,CAA9C,GAAkD,MAAlD,GAA2D,OAH/D;AAAA,iCAME,QAAC,KAAD,OAAWhB,IAAX;AAAiB,YAAA,MAAM,EAAEC,KAAK,iBAAI,QAAC,UAAD,OAAgBA;AAAhB;AAAA;AAAA;AAAA;AAAA;AAAlC;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA;AAPF,SACOE,QAAQ,CAACM,QADhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAuBD,CAnCM;;GAAMP,Y;UACIT,W;;;MADJS,Y","sourcesContent":["import React, { useRef } from 'react';\nimport { Route, useLocation } from 'react-router-dom';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport HeaderContainer from '@containers/HeaderContainer/index.js';\n// import { useSelector } from \"react-redux\";\n// import Loader from '@components/Loader'\n\nexport const PublicRoute = ({ component: Components, ...rest }) => {\n  // const authentificated = useSelector(state => state.authentificationReducer.isAuthentificated);\n  return (\n    <>\n      <Route {...rest} render={props => <Components {...props} />} />\n    </>\n  );\n};\nexport const PrivateRoute = ({ component: Components, ...rest }) => {\n  let location = useLocation();\n  const timeout = { enter: 800, exit: 400 };\n\n  const getPathDepth = location => {\n    let pathArr = location.pathname.split('/');\n    pathArr = pathArr.filter(n => n !== '');\n    return pathArr.length;\n  };\n\n  const prevDepth = useRef(getPathDepth(location));\n  const nodeRef = useRef(null);\n  return (\n    <>\n      <HeaderContainer />\n      <TransitionGroup component=\"div\">\n        <CSSTransition\n          key={location.pathname}\n          classNames=\"pageSlider\"\n          timeout={timeout}\n          mountOnEnter={false}\n          unmountOnExit={true}\n        >\n          <div\n            ref={nodeRef}\n            className={\n              getPathDepth(location) - prevDepth.current >= 0 ? 'left' : 'right'\n            }\n          >\n            <Route {...rest} render={props => <Components {...props} />} />\n          </div>\n        </CSSTransition>\n      </TransitionGroup>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}